(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3393],{5805:function(e,n,t){"use strict";var r=t(73203);n.Z=void 0;var o=r(t(19124)),i=t(24246),a=(0,o.default)((0,i.jsx)("path",{d:"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z"}),"ExpandMore");n.Z=a},77379:function(e,n,t){"use strict";t.d(n,{Z:function(){return w}});var r=t(30808),o=t(25773),i=t(27378),a=(t(19185),t(38944)),s=t(82267),d=t(67018),l=t(76112),c=t(7436),u=t(80252),p=t(30925),m=t(48465),g=t(6749);function f(e){return(0,g.Z)("MuiAccordion",e)}var h=(0,t(44124).Z)("MuiAccordion",["root","rounded","expanded","disabled","gutters","region"]),S=t(24246);const y=["children","className","defaultExpanded","disabled","disableGutters","expanded","onChange","square","TransitionComponent","TransitionProps"],v=(0,d.ZP)(u.Z,{name:"MuiAccordion",slot:"Root",overridesResolver:(e,n)=>{const{ownerState:t}=e;return[{[`& .${h.region}`]:n.region},n.root,!t.square&&n.rounded,!t.disableGutters&&n.gutters]}})((({theme:e})=>{const n={duration:e.transitions.duration.shortest};return{position:"relative",transition:e.transitions.create(["margin"],n),overflowAnchor:"none","&:before":{position:"absolute",left:0,top:-1,right:0,height:1,content:'""',opacity:1,backgroundColor:(e.vars||e).palette.divider,transition:e.transitions.create(["opacity","background-color"],n)},"&:first-of-type":{"&:before":{display:"none"}},[`&.${h.expanded}`]:{"&:before":{opacity:0},"&:first-of-type":{marginTop:0},"&:last-of-type":{marginBottom:0},"& + &":{"&:before":{display:"none"}}},[`&.${h.disabled}`]:{backgroundColor:(e.vars||e).palette.action.disabledBackground}}}),(({theme:e,ownerState:n})=>(0,o.Z)({},!n.square&&{borderRadius:0,"&:first-of-type":{borderTopLeftRadius:(e.vars||e).shape.borderRadius,borderTopRightRadius:(e.vars||e).shape.borderRadius},"&:last-of-type":{borderBottomLeftRadius:(e.vars||e).shape.borderRadius,borderBottomRightRadius:(e.vars||e).shape.borderRadius,"@supports (-ms-ime-align: auto)":{borderBottomLeftRadius:0,borderBottomRightRadius:0}}},!n.disableGutters&&{[`&.${h.expanded}`]:{margin:"16px 0"}})));var w=i.forwardRef((function(e,n){const t=(0,l.Z)({props:e,name:"MuiAccordion"}),{children:d,className:u,defaultExpanded:g=!1,disabled:h=!1,disableGutters:w=!1,expanded:C,onChange:b,square:R=!1,TransitionComponent:D=c.Z,TransitionProps:x}=t,G=(0,r.Z)(t,y),[I,L]=(0,m.Z)({controlled:C,default:g,name:"Accordion",state:"expanded"}),E=i.useCallback((e=>{L(!I),b&&b(e,!I)}),[I,b,L]),[k,...A]=i.Children.toArray(d),T=i.useMemo((()=>({expanded:I,disabled:h,disableGutters:w,toggle:E})),[I,h,w,E]),M=(0,o.Z)({},t,{square:R,disabled:h,disableGutters:w,expanded:I}),F=(e=>{const{classes:n,square:t,expanded:r,disabled:o,disableGutters:i}=e,a={root:["root",!t&&"rounded",r&&"expanded",o&&"disabled",!i&&"gutters"],region:["region"]};return(0,s.Z)(a,f,n)})(M);return(0,S.jsxs)(v,(0,o.Z)({className:(0,a.Z)(F.root,u),ref:n,ownerState:M,square:R},G,{children:[(0,S.jsx)(p.Z.Provider,{value:T,children:k}),(0,S.jsx)(D,(0,o.Z)({in:I,timeout:"auto"},x,{children:(0,S.jsx)("div",{"aria-labelledby":k.props.id,id:k.props["aria-controls"],role:"region",className:F.region,children:A})}))]}))}))},30925:function(e,n,t){"use strict";const r=t(27378).createContext({});n.Z=r},17931:function(e,n,t){"use strict";t.d(n,{Z:function(){return f}});var r=t(25773),o=t(30808),i=t(27378),a=t(38944),s=t(82267),d=t(67018),l=t(76112),c=t(6749);function u(e){return(0,c.Z)("MuiAccordionDetails",e)}(0,t(44124).Z)("MuiAccordionDetails",["root"]);var p=t(24246);const m=["className"],g=(0,d.ZP)("div",{name:"MuiAccordionDetails",slot:"Root",overridesResolver:(e,n)=>n.root})((({theme:e})=>({padding:e.spacing(1,2,2)})));var f=i.forwardRef((function(e,n){const t=(0,l.Z)({props:e,name:"MuiAccordionDetails"}),{className:i}=t,d=(0,o.Z)(t,m),c=t,f=(e=>{const{classes:n}=e;return(0,s.Z)({root:["root"]},u,n)})(c);return(0,p.jsx)(g,(0,r.Z)({className:(0,a.Z)(f.root,i),ref:n,ownerState:c},d))}))},89757:function(e,n,t){"use strict";var r=t(30808),o=t(25773),i=t(27378),a=t(38944),s=t(82267),d=t(67018),l=t(76112),c=t(25482),u=t(30925),p=t(79343),m=t(24246);const g=["children","className","expandIcon","focusVisibleClassName","onClick"],f=(0,d.ZP)(c.Z,{name:"MuiAccordionSummary",slot:"Root",overridesResolver:(e,n)=>n.root})((({theme:e,ownerState:n})=>{const t={duration:e.transitions.duration.shortest};return(0,o.Z)({display:"flex",minHeight:48,padding:e.spacing(0,2),transition:e.transitions.create(["min-height","background-color"],t),[`&.${p.Z.focusVisible}`]:{backgroundColor:(e.vars||e).palette.action.focus},[`&.${p.Z.disabled}`]:{opacity:(e.vars||e).palette.action.disabledOpacity},[`&:hover:not(.${p.Z.disabled})`]:{cursor:"pointer"}},!n.disableGutters&&{[`&.${p.Z.expanded}`]:{minHeight:64}})})),h=(0,d.ZP)("div",{name:"MuiAccordionSummary",slot:"Content",overridesResolver:(e,n)=>n.content})((({theme:e,ownerState:n})=>(0,o.Z)({display:"flex",flexGrow:1,margin:"12px 0"},!n.disableGutters&&{transition:e.transitions.create(["margin"],{duration:e.transitions.duration.shortest}),[`&.${p.Z.expanded}`]:{margin:"20px 0"}}))),S=(0,d.ZP)("div",{name:"MuiAccordionSummary",slot:"ExpandIconWrapper",overridesResolver:(e,n)=>n.expandIconWrapper})((({theme:e})=>({display:"flex",color:(e.vars||e).palette.action.active,transform:"rotate(0deg)",transition:e.transitions.create("transform",{duration:e.transitions.duration.shortest}),[`&.${p.Z.expanded}`]:{transform:"rotate(180deg)"}}))),y=i.forwardRef((function(e,n){const t=(0,l.Z)({props:e,name:"MuiAccordionSummary"}),{children:d,className:c,expandIcon:y,focusVisibleClassName:v,onClick:w}=t,C=(0,r.Z)(t,g),{disabled:b=!1,disableGutters:R,expanded:D,toggle:x}=i.useContext(u.Z),G=(0,o.Z)({},t,{expanded:D,disabled:b,disableGutters:R}),I=(e=>{const{classes:n,expanded:t,disabled:r,disableGutters:o}=e,i={root:["root",t&&"expanded",r&&"disabled",!o&&"gutters"],focusVisible:["focusVisible"],content:["content",t&&"expanded",!o&&"contentGutters"],expandIconWrapper:["expandIconWrapper",t&&"expanded"]};return(0,s.Z)(i,p.i,n)})(G);return(0,m.jsxs)(f,(0,o.Z)({focusRipple:!1,disableRipple:!0,disabled:b,component:"div","aria-expanded":D,className:(0,a.Z)(I.root,c),focusVisibleClassName:(0,a.Z)(I.focusVisible,v),onClick:e=>{x&&x(e),w&&w(e)},ref:n,ownerState:G},C,{children:[(0,m.jsx)(h,{className:I.content,ownerState:G,children:d}),y&&(0,m.jsx)(S,{className:I.expandIconWrapper,ownerState:G,children:y})]}))}));n.Z=y},79343:function(e,n,t){"use strict";t.d(n,{i:function(){return o}});var r=t(6749);function o(e){return(0,r.Z)("MuiAccordionSummary",e)}const i=(0,t(44124).Z)("MuiAccordionSummary",["root","expanded","focusVisible","disabled","gutters","contentGutters","content","expandIconWrapper"]);n.Z=i},29093:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return F}});var r=t(27378),o=t(86767),i=t(95649),a=t(49260),s=t(76352),d=t(24246),l=["name","rating","country","dateCreated","isAdmin"];var c=t(26582),u=["name","rating","country","dateCreated","isAdmin"];var p=["name","rating","country","dateCreated","isAdmin"];var m=t(25778),g=["name","rating","country","dateCreated","isAdmin"];var f=["name","rating","country","dateCreated","isAdmin"];var h=t(23315),S=t(22755),y=["rating","country","dateCreated"],v=function(e,n,t,r){var o=(0,S.gridNumberComparator)(e.isAdmin,n.isAdmin,t,r);return 0!==o?o:(0,S.gridStringOrNumberComparator)(e.name,n.name,t,r)};var w=["name","rating","country","isAdmin"],C=function(e,n){return e.getDate()-n.getDate()};var b=["name","rating","country","dateCreated","isAdmin"];var R=["name","rating","country","dateCreated","isAdmin"];var D={dataSet:"Employee",visibleFields:["name","rating","country","dateCreated","isAdmin"],rowLength:100},x=(0,t(37718).$)(D),G=x.columns,I=x.useQuery;var L=t(36546),E=JSON.parse('{"name":"GridSortApi","description":"The sort API interface that is available in the grid apiRef.","properties":[{"name":"applySorting","description":"Applies the current sort model to the rows.","type":"() => void"},{"name":"getRowIdFromRowIndex","description":"Gets the <code>GridRowId</code> of a row at a specific index.\\nThe index is based on the sorted but unfiltered row list.","type":"(index: number) => GridRowId"},{"name":"getRowIndex","description":"Gets the row index of a row with a given id.\\nThe index is based on the sorted but unfiltered row list.","type":"(id: GridRowId) => number"},{"name":"getSortedRowIds","description":"Returns all row ids sorted according to the active sort model.","type":"() => GridRowId[]"},{"name":"getSortedRows","description":"Returns all rows sorted according to the active sort model.","type":"() => GridRowModel[]"},{"name":"getSortModel","description":"Returns the sort model currently applied to the grid.","type":"() => GridSortModel"},{"name":"setSortModel","description":"Updates the sort model and triggers the sorting of rows.","type":"(model: GridSortModel) => void"},{"name":"sortColumn","description":"Sorts a column.","type":"(column: GridColDef, direction?: GridSortDirection, allowMultipleSorting?: boolean) => void"}]}');var k=t(87442);const A={en:{description:"Easily sort your rows based on one or several criteria.",location:"/docs/data/data-grid/sorting/sorting.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Data grid - Sorting</h1><p class="description">Easily sort your rows based on one or several criteria.</p>\n\n<p>Sorting is enabled by default to the grid users and works out of the box without any explicit configuration.\nUsers can set a sorting rule simply by clicking on a column header.\nFollowing clicks change the column&#39;s sorting direction. You can see the applied direction on the header&#39;s arrow indicator.</p>\n',{demo:"BasicExampleDataGrid.js",bg:"inline",defaultCodeOpen:!1},'<h2 id="single-and-multi-sorting">Single and multi-sorting<a aria-labelledby="single-and-multi-sorting" class="anchor-link-style" href="#single-and-multi-sorting" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><aside class="MuiCallout-root MuiCallout-warning"><p>The <code>DataGrid</code> can only sort the rows according to one criterion at a time.</p>\n<p>To use multi-sorting, you need to upgrade to <a href="/x/introduction/licensing/#pro-plan">Pro plan</a> or above.</p>\n\n</aside><h2 id="multi-sorting">Multi-sorting <a href="/x/introduction/licensing/#pro-plan"><span class="plan-pro"></span></a><a aria-labelledby="multi-sorting" class="anchor-link-style" href="#multi-sorting" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The following demo lets you sort the rows according to several criteria at the same time.</p>\n<p>Hold down the <kbd class="key">Ctrl</kbd> or <kbd class="key">Shift</kbd> (use <kbd class="key">\u2318 Command</kbd> on macOS) key while clicking the column header.</p>\n',{demo:"BasicExampleDataGridPro.js",bg:"inline",defaultCodeOpen:!1},'<h2 id="pass-sorting-rules-to-the-grid">Pass sorting rules to the grid<a aria-labelledby="pass-sorting-rules-to-the-grid" class="anchor-link-style" href="#pass-sorting-rules-to-the-grid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="structure-of-the-model">Structure of the model<a aria-labelledby="structure-of-the-model" class="anchor-link-style" href="#structure-of-the-model" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The sort model is a list of sorting items.\nEach item represents a sorting rule and is composed of several elements:</p>\n<ul>\n<li><code>sortingItem.field</code>: the field on which we want to apply the rule</li>\n<li><code>sortingItem.sort</code>: the direction of the sorting (<code>&#39;asc&#39;</code>, <code>&#39;desc&#39;</code>, <code>null</code> or <code>undefined</code>). If <code>null</code> or <code>undefined</code>, the rule will not be applied.</li>\n</ul>\n<h3 id="initialize-the-sort-model">Initialize the sort model<a aria-labelledby="initialize-the-sort-model" class="anchor-link-style" href="#initialize-the-sort-model" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Sorting is enabled by default to the user.\nBut if you want to set an initial sorting order, simply provide the model to the <code>initialState</code> prop.</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token operator">&lt;</span>DataGrid\n  initialState<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">sorting</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">sortModel</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">\'rating\'</span><span class="token punctuation">,</span> <span class="token literal-property property">sort</span><span class="token operator">:</span> <span class="token string">\'desc\'</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">}</span>\n<span class="token operator">/</span><span class="token operator">></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n',{demo:"InitialSort.js",bg:"inline",defaultCodeOpen:!1},'<h3 id="controlled-sort-model">Controlled sort model<a aria-labelledby="controlled-sort-model" class="anchor-link-style" href="#controlled-sort-model" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Use the <code>sortModel</code> prop to control the state of the sorting rules.</p>\n<p>You can use the <code>onSortModelChange</code> prop to listen to changes in the sorting rules and update the prop accordingly.</p>\n',{demo:"ControlledSort.js",bg:"inline",defaultCodeOpen:!1},'<h2 id="disable-the-sorting">Disable the sorting<a aria-labelledby="disable-the-sorting" class="anchor-link-style" href="#disable-the-sorting" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>By default, all columns are sortable.\nTo disable sorting on a column, set the <code>sortable</code> property of <code>GridColDef</code> to <code>false</code>.\nIn the following demo, the user cannot use the <em>rating</em> column as a sorting rule.</p>\n<div class="MuiCode-root"><pre><code class="language-tsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DataGrid</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token operator">...</span>columns<span class="token punctuation">,</span> <span class="token punctuation">{</span> field<span class="token operator">:</span> <span class="token string">\'rating\'</span><span class="token punctuation">,</span> sortable<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n',{demo:"DisableSortingGrid.js",bg:"inline",defaultCodeOpen:!1},'<h2 id="custom-comparator">Custom comparator<a aria-labelledby="custom-comparator" class="anchor-link-style" href="#custom-comparator" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>A comparator determines how two cell values should be sorted.</p>\n<p>Each column type comes with a default comparator method.\nYou can re-use them by importing the following functions:</p>\n<ul>\n<li><code>gridStringOrNumberComparator</code> (used by the <code>string</code> and <code>singleSelect</code> columns)</li>\n<li><code>gridNumberComparator</code> (used by the <code>number</code> and <code>boolean</code> columns)</li>\n<li><code>gridDateComparator</code> (used by the <code>date</code> and <code>date-time</code> columns)</li>\n</ul>\n<p>To extend or modify this behavior in a specific column, you can pass in a custom comparator, and override the <code>sortComparator</code> property of the <code>GridColDef</code> interface.</p>\n<h3 id="create-a-comparator-from-scratch">Create a comparator from scratch<a aria-labelledby="create-a-comparator-from-scratch" class="anchor-link-style" href="#create-a-comparator-from-scratch" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>In the following demo, the &quot;Created on&quot; column sorting is based on the day of the month of the <code>createdOn</code> field.\nIt is a fully custom sorting comparator.</p>\n',{demo:"FullyCustomSortComparator.js",bg:"inline",defaultCodeOpen:!1},'<h3 id="combine-built-in-comparators">Combine built-in comparators<a aria-labelledby="combine-built-in-comparators" class="anchor-link-style" href="#combine-built-in-comparators" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>In the following demo, the &quot;Name&quot; column combines the <code>name</code> and <code>isAdmin</code> fields.\nThe sorting is based on <code>isAdmin</code> and then on <code>name</code>, if necessary. It re-uses the built-in sorting comparator.</p>\n',{demo:"ExtendedSortComparator.js",bg:"inline",defaultCodeOpen:!1},'<h2 id="custom-sort-order">Custom sort order<a aria-labelledby="custom-sort-order" class="anchor-link-style" href="#custom-sort-order" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>By default, the sort order cycles between these three different modes:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">const</span> sortingOrder <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'asc\'</span><span class="token punctuation">,</span> <span class="token string">\'desc\'</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n<p>In practice, when you click a column that is not sorted, it will sort ascending (<code>asc</code>).\nThe next click will make it sort descending (<code>desc</code>). Another click will remove the sort (<code>null</code>), reverting to the order that the data was provided in.</p>\n<h3 id="for-all-columns">For all columns<a aria-labelledby="for-all-columns" class="anchor-link-style" href="#for-all-columns" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The default sort order can be overridden for all columns with the <code>sortingOrder</code> prop.\nIn the following demo, columns are only sortable in descending or ascending order.</p>\n',{demo:"OrderSortingGrid.js",bg:"inline",defaultCodeOpen:!1},'<h3 id="per-column">Per column<a aria-labelledby="per-column" class="anchor-link-style" href="#per-column" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Sort order can be configured (and overridden) on a per-column basis by setting the <code>sortingOrder</code> property of the <code>GridColDef</code> interface:</p>\n<div class="MuiCode-root"><pre><code class="language-tsx"><span class="token keyword">const</span> columns<span class="token operator">:</span> GridColDef <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span> field<span class="token operator">:</span> <span class="token string">\'rating\'</span><span class="token punctuation">,</span> sortingOrder<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'desc\'</span><span class="token punctuation">,</span> <span class="token string">\'asc\'</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n',{demo:"OrderSortingPerColumnGrid.js",bg:"inline",defaultCodeOpen:!1},'<h2 id="server-side-sorting">Server-side sorting<a aria-labelledby="server-side-sorting" class="anchor-link-style" href="#server-side-sorting" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Sorting can be run server-side by setting the <code>sortingMode</code> prop to <code>server</code>, and implementing the <code>onSortModelChange</code> handler.</p>\n',{demo:"ServerSortingGrid.js",bg:"inline"},'<h2 id="apiref">apiRef <a href="/x/introduction/licensing/#pro-plan"><span class="plan-pro"></span></a><a aria-labelledby="apiref" class="anchor-link-style" href="#apiref" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><aside class="MuiCallout-root MuiCallout-warning"><p>Only use this API as the last option. Give preference to the props to control the grid.</p>\n\n</aside>',{demo:"SortingApiNoSnap.js",bg:"inline",hideToolbar:!0},'<h2 id="selectors">Selectors <a href="/x/introduction/licensing/#pro-plan"><span class="plan-pro"></span></a><a aria-labelledby="selectors" class="anchor-link-style" href="#selectors" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2>',{demo:"SortingSelectorsNoSnap.js",bg:"inline",hideToolbar:!0},'<p>More information about the selectors and how to use them on the <a href="/x/react-data-grid/state/#access-the-state">dedicated page</a></p>\n<h2 id="api">API<a aria-labelledby="api" class="anchor-link-style" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="/x/api/data-grid/data-grid/">DataGrid</a></li>\n<li><a href="/x/api/data-grid/data-grid-pro/">DataGridPro</a></li>\n<li><a href="/x/api/data-grid/data-grid-premium/">DataGridPremium</a></li>\n</ul>\n'],toc:[{text:"Single and multi-sorting",level:2,hash:"single-and-multi-sorting",children:[]},{text:"Multi-sorting",level:2,hash:"multi-sorting",children:[]},{text:"Pass sorting rules to the grid",level:2,hash:"pass-sorting-rules-to-the-grid",children:[{text:"Structure of the model",level:3,hash:"structure-of-the-model"},{text:"Initialize the sort model",level:3,hash:"initialize-the-sort-model"},{text:"Controlled sort model",level:3,hash:"controlled-sort-model"}]},{text:"Disable the sorting",level:2,hash:"disable-the-sorting",children:[]},{text:"Custom comparator",level:2,hash:"custom-comparator",children:[{text:"Create a comparator from scratch",level:3,hash:"create-a-comparator-from-scratch"},{text:"Combine built-in comparators",level:3,hash:"combine-built-in-comparators"}]},{text:"Custom sort order",level:2,hash:"custom-sort-order",children:[{text:"For all columns",level:3,hash:"for-all-columns"},{text:"Per column",level:3,hash:"per-column"}]},{text:"Server-side sorting",level:2,hash:"server-side-sorting",children:[]},{text:"apiRef",level:2,hash:"apiref",children:[]},{text:"Selectors",level:2,hash:"selectors",children:[]},{text:"API",level:2,hash:"api",children:[]}],title:"Data Grid - Sorting",headers:{title:"Data Grid - Sorting",components:[]}}},T={"BasicExampleDataGrid.js":{module:"./BasicExampleDataGrid.js",raw:"import * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useDemoData } from '@mui/x-data-grid-generator';\n\nconst VISIBLE_FIELDS = ['name', 'rating', 'country', 'dateCreated', 'isAdmin'];\n\nexport default function BasicExampleDataGrid() {\n  const { data } = useDemoData({\n    dataSet: 'Employee',\n    visibleFields: VISIBLE_FIELDS,\n    rowLength: 100,\n  });\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid {...data} />\n    </div>\n  );\n}\n",jsxPreview:"<DataGrid {...data} />",moduleTS:"./BasicExampleDataGrid.js",rawTS:"import * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useDemoData } from '@mui/x-data-grid-generator';\n\nconst VISIBLE_FIELDS = ['name', 'rating', 'country', 'dateCreated', 'isAdmin'];\n\nexport default function BasicExampleDataGrid() {\n  const { data } = useDemoData({\n    dataSet: 'Employee',\n    visibleFields: VISIBLE_FIELDS,\n    rowLength: 100,\n  });\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid {...data} />\n    </div>\n  );\n}\n"},"BasicExampleDataGridPro.js":{module:"./BasicExampleDataGridPro.js",raw:"import * as React from 'react';\nimport { DataGridPro } from '@mui/x-data-grid-pro';\nimport { useDemoData } from '@mui/x-data-grid-generator';\n\nconst VISIBLE_FIELDS = ['name', 'rating', 'country', 'dateCreated', 'isAdmin'];\n\nexport default function BasicExampleDataGridPro() {\n  const { data } = useDemoData({\n    dataSet: 'Employee',\n    visibleFields: VISIBLE_FIELDS,\n    rowLength: 100,\n  });\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGridPro {...data} />\n    </div>\n  );\n}\n",jsxPreview:"<DataGridPro {...data} />",moduleTS:"./BasicExampleDataGridPro.js",rawTS:"import * as React from 'react';\nimport { DataGridPro } from '@mui/x-data-grid-pro';\nimport { useDemoData } from '@mui/x-data-grid-generator';\n\nconst VISIBLE_FIELDS = ['name', 'rating', 'country', 'dateCreated', 'isAdmin'];\n\nexport default function BasicExampleDataGridPro() {\n  const { data } = useDemoData({\n    dataSet: 'Employee',\n    visibleFields: VISIBLE_FIELDS,\n    rowLength: 100,\n  });\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGridPro {...data} />\n    </div>\n  );\n}\n"},"InitialSort.js":{module:"./InitialSort.js",raw:"import * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useDemoData } from '@mui/x-data-grid-generator';\n\nconst VISIBLE_FIELDS = ['name', 'rating', 'country', 'dateCreated', 'isAdmin'];\n\nexport default function InitialSort() {\n  const { data } = useDemoData({\n    dataSet: 'Employee',\n    visibleFields: VISIBLE_FIELDS,\n    rowLength: 100,\n  });\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid\n        {...data}\n        initialState={{\n          sorting: {\n            sortModel: [\n              {\n                field: 'rating',\n                sort: 'desc',\n              },\n            ],\n          },\n        }}\n      />\n    </div>\n  );\n}\n",jsxPreview:"<DataGrid\n  {...data}\n  initialState={{\n    sorting: {\n      sortModel: [\n        {\n          field: 'rating',\n          sort: 'desc',\n        },\n      ],\n    },\n  }}\n/>",moduleTS:"./InitialSort.js",rawTS:"import * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useDemoData } from '@mui/x-data-grid-generator';\n\nconst VISIBLE_FIELDS = ['name', 'rating', 'country', 'dateCreated', 'isAdmin'];\n\nexport default function InitialSort() {\n  const { data } = useDemoData({\n    dataSet: 'Employee',\n    visibleFields: VISIBLE_FIELDS,\n    rowLength: 100,\n  });\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid\n        {...data}\n        initialState={{\n          sorting: {\n            sortModel: [\n              {\n                field: 'rating',\n                sort: 'desc',\n              },\n            ],\n          },\n        }}\n      />\n    </div>\n  );\n}\n"},"ControlledSort.js":{module:"./ControlledSort.js",raw:"import * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useDemoData } from '@mui/x-data-grid-generator';\n\nconst VISIBLE_FIELDS = ['name', 'rating', 'country', 'dateCreated', 'isAdmin'];\n\nexport default function ControlledSort() {\n  const { data } = useDemoData({\n    dataSet: 'Employee',\n    visibleFields: VISIBLE_FIELDS,\n    rowLength: 100,\n  });\n\n  const [sortModel, setSortModel] = React.useState([\n    {\n      field: 'rating',\n      sort: 'desc',\n    },\n  ]);\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid\n        {...data}\n        sortModel={sortModel}\n        onSortModelChange={(newSortModel) => setSortModel(newSortModel)}\n      />\n    </div>\n  );\n}\n",jsxPreview:"<DataGrid\n  {...data}\n  sortModel={sortModel}\n  onSortModelChange={(newSortModel) => setSortModel(newSortModel)}\n/>",moduleTS:"./ControlledSort.js",rawTS:"import * as React from 'react';\nimport { DataGrid, GridSortModel } from '@mui/x-data-grid';\nimport { useDemoData } from '@mui/x-data-grid-generator';\n\nconst VISIBLE_FIELDS = ['name', 'rating', 'country', 'dateCreated', 'isAdmin'];\n\nexport default function ControlledSort() {\n  const { data } = useDemoData({\n    dataSet: 'Employee',\n    visibleFields: VISIBLE_FIELDS,\n    rowLength: 100,\n  });\n\n  const [sortModel, setSortModel] = React.useState<GridSortModel>([\n    {\n      field: 'rating',\n      sort: 'desc',\n    },\n  ]);\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid\n        {...data}\n        sortModel={sortModel}\n        onSortModelChange={(newSortModel) => setSortModel(newSortModel)}\n      />\n    </div>\n  );\n}\n"},"DisableSortingGrid.js":{module:"./DisableSortingGrid.js",raw:"import * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useDemoData } from '@mui/x-data-grid-generator';\n\nconst VISIBLE_FIELDS = ['name', 'rating', 'country', 'dateCreated', 'isAdmin'];\n\nexport default function DisableSortingGrid() {\n  const { data } = useDemoData({\n    dataSet: 'Employee',\n    visibleFields: VISIBLE_FIELDS,\n    rowLength: 100,\n  });\n\n  const columns = React.useMemo(\n    () =>\n      data.columns.map((col) =>\n        col.field === 'rating' ? { ...col, sortable: false } : col,\n      ),\n    [data.columns],\n  );\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid {...data} columns={columns} />\n    </div>\n  );\n}\n",jsxPreview:"<DataGrid {...data} columns={columns} />",moduleTS:"./DisableSortingGrid.js",rawTS:"import * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useDemoData } from '@mui/x-data-grid-generator';\n\nconst VISIBLE_FIELDS = ['name', 'rating', 'country', 'dateCreated', 'isAdmin'];\n\nexport default function DisableSortingGrid() {\n  const { data } = useDemoData({\n    dataSet: 'Employee',\n    visibleFields: VISIBLE_FIELDS,\n    rowLength: 100,\n  });\n\n  const columns = React.useMemo(\n    () =>\n      data.columns.map((col) =>\n        col.field === 'rating' ? { ...col, sortable: false } : col,\n      ),\n    [data.columns],\n  );\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid {...data} columns={columns} />\n    </div>\n  );\n}\n"},"ExtendedSortComparator.js":{module:"./ExtendedSortComparator.js",raw:"import * as React from 'react';\nimport {\n  DataGrid,\n  gridNumberComparator,\n  gridStringOrNumberComparator,\n} from '@mui/x-data-grid';\nimport { useDemoData } from '@mui/x-data-grid-generator';\n\nconst VISIBLE_FIELDS = ['rating', 'country', 'dateCreated'];\n\nconst nameAdminSortComparator = (v1, v2, param1, param2) => {\n  const adminComparatorResult = gridNumberComparator(\n    v1.isAdmin,\n    v2.isAdmin,\n    param1,\n    param2,\n  );\n\n  // The `isAdmin` values of the two cells are different\n  // We can stop here and sort based on the `isAdmin` field.\n  if (adminComparatorResult !== 0) {\n    return adminComparatorResult;\n  }\n\n  return gridStringOrNumberComparator(v1.name, v2.name, param1, param2);\n};\n\nexport default function ExtendedSortComparator() {\n  const { data } = useDemoData({\n    dataSet: 'Employee',\n    visibleFields: VISIBLE_FIELDS,\n    rowLength: 100,\n  });\n\n  const columns = React.useMemo(\n    () => [\n      {\n        field: 'nameAdmin',\n        headerName: 'Name',\n        valueGetter: (params) => ({\n          name: params.row.name,\n          isAdmin: params.row.isAdmin,\n        }),\n        valueFormatter: (params) => {\n          const value = params.value;\n          if (value.isAdmin) {\n            return `${value.name} (admin)`;\n          }\n\n          return value.name;\n        },\n        sortComparator: nameAdminSortComparator,\n        width: 200,\n      },\n      ...data.columns,\n    ],\n    [data.columns],\n  );\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid\n        {...data}\n        columns={columns}\n        initialState={{\n          ...data.initialState,\n          sorting: {\n            ...data.initialState?.sorting,\n            sortModel: [\n              {\n                field: 'nameAdmin',\n                sort: 'asc',\n              },\n            ],\n          },\n        }}\n      />\n    </div>\n  );\n}\n",jsxPreview:"<DataGrid\n  {...data}\n  columns={columns}\n  initialState={{\n    ...data.initialState,\n    sorting: {\n      ...data.initialState?.sorting,\n      sortModel: [\n        {\n          field: 'nameAdmin',\n          sort: 'asc',\n        },\n      ],\n    },\n  }}\n/>",moduleTS:"./ExtendedSortComparator.js",rawTS:"import * as React from 'react';\nimport {\n  GridColumns,\n  DataGrid,\n  GridValueGetterParams,\n  gridNumberComparator,\n  gridStringOrNumberComparator,\n  GridComparatorFn,\n} from '@mui/x-data-grid';\nimport { useDemoData } from '@mui/x-data-grid-generator';\n\nconst VISIBLE_FIELDS = ['rating', 'country', 'dateCreated'];\n\ninterface NameAdminCellValue {\n  name: string;\n  isAdmin: boolean;\n}\n\nconst nameAdminSortComparator: GridComparatorFn = (v1, v2, param1, param2) => {\n  const adminComparatorResult = gridNumberComparator(\n    (v1 as NameAdminCellValue).isAdmin,\n    (v2 as NameAdminCellValue).isAdmin,\n    param1,\n    param2,\n  );\n\n  // The `isAdmin` values of the two cells are different\n  // We can stop here and sort based on the `isAdmin` field.\n  if (adminComparatorResult !== 0) {\n    return adminComparatorResult;\n  }\n\n  return gridStringOrNumberComparator(\n    (v1 as NameAdminCellValue).name,\n    (v2 as NameAdminCellValue).name,\n    param1,\n    param2,\n  );\n};\n\nexport default function ExtendedSortComparator() {\n  const { data } = useDemoData({\n    dataSet: 'Employee',\n    visibleFields: VISIBLE_FIELDS,\n    rowLength: 100,\n  });\n\n  const columns = React.useMemo<GridColumns>(\n    () => [\n      {\n        field: 'nameAdmin',\n        headerName: 'Name',\n        valueGetter: (params: GridValueGetterParams) => ({\n          name: params.row.name,\n          isAdmin: params.row.isAdmin,\n        }),\n        valueFormatter: (params) => {\n          const value = params.value as NameAdminCellValue;\n          if (value.isAdmin) {\n            return `${value.name} (admin)`;\n          }\n\n          return value.name;\n        },\n        sortComparator: nameAdminSortComparator,\n        width: 200,\n      },\n      ...data.columns,\n    ],\n    [data.columns],\n  );\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid\n        {...data}\n        columns={columns}\n        initialState={{\n          ...data.initialState,\n          sorting: {\n            ...data.initialState?.sorting,\n            sortModel: [\n              {\n                field: 'nameAdmin',\n                sort: 'asc',\n              },\n            ],\n          },\n        }}\n      />\n    </div>\n  );\n}\n"},"FullyCustomSortComparator.js":{module:"./FullyCustomSortComparator.js",raw:"import * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useDemoData } from '@mui/x-data-grid-generator';\n\nconst VISIBLE_FIELDS = ['name', 'rating', 'country', 'isAdmin'];\n\nconst dayInMonthComparator = (v1, v2) => v1.getDate() - v2.getDate();\n\nexport default function FullyCustomSortComparator() {\n  const { data } = useDemoData({\n    dataSet: 'Employee',\n    visibleFields: VISIBLE_FIELDS,\n    rowLength: 100,\n  });\n\n  const columns = React.useMemo(\n    () => [\n      {\n        field: 'dateCreatedCustom',\n        valueGetter: (params) => params.row.dateCreated,\n        headerName: 'Created on',\n        width: 180,\n        type: 'date',\n        sortComparator: dayInMonthComparator,\n      },\n      ...data.columns,\n    ],\n    [data.columns],\n  );\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid\n        {...data}\n        columns={columns}\n        initialState={{\n          ...data.initialState,\n          sorting: {\n            ...data.initialState?.sorting,\n            sortModel: [\n              {\n                field: 'dateCreatedCustom',\n                sort: 'asc',\n              },\n            ],\n          },\n        }}\n      />\n    </div>\n  );\n}\n",jsxPreview:"<DataGrid\n  {...data}\n  columns={columns}\n  initialState={{\n    ...data.initialState,\n    sorting: {\n      ...data.initialState?.sorting,\n      sortModel: [\n        {\n          field: 'dateCreatedCustom',\n          sort: 'asc',\n        },\n      ],\n    },\n  }}\n/>",moduleTS:"./FullyCustomSortComparator.js",rawTS:"import * as React from 'react';\nimport { GridColumns, DataGrid, GridComparatorFn } from '@mui/x-data-grid';\nimport { useDemoData } from '@mui/x-data-grid-generator';\n\nconst VISIBLE_FIELDS = ['name', 'rating', 'country', 'isAdmin'];\n\nconst dayInMonthComparator: GridComparatorFn<Date> = (v1, v2) =>\n  v1.getDate() - v2.getDate();\n\nexport default function FullyCustomSortComparator() {\n  const { data } = useDemoData({\n    dataSet: 'Employee',\n    visibleFields: VISIBLE_FIELDS,\n    rowLength: 100,\n  });\n\n  const columns = React.useMemo<GridColumns>(\n    () => [\n      {\n        field: 'dateCreatedCustom',\n        valueGetter: (params) => params.row.dateCreated,\n        headerName: 'Created on',\n        width: 180,\n        type: 'date',\n        sortComparator: dayInMonthComparator,\n      },\n      ...data.columns,\n    ],\n    [data.columns],\n  );\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid\n        {...data}\n        columns={columns}\n        initialState={{\n          ...data.initialState,\n          sorting: {\n            ...data.initialState?.sorting,\n            sortModel: [\n              {\n                field: 'dateCreatedCustom',\n                sort: 'asc',\n              },\n            ],\n          },\n        }}\n      />\n    </div>\n  );\n}\n"},"OrderSortingPerColumnGrid.js":{module:"./OrderSortingPerColumnGrid.js",raw:"import * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useDemoData } from '@mui/x-data-grid-generator';\n\nconst VISIBLE_FIELDS = ['name', 'rating', 'country', 'dateCreated', 'isAdmin'];\n\nexport default function OrderSortingPerColumnGrid() {\n  const { data } = useDemoData({\n    dataSet: 'Employee',\n    visibleFields: VISIBLE_FIELDS,\n    rowLength: 100,\n  });\n\n  const columns = React.useMemo(\n    () =>\n      data.columns.map((column) => {\n        if (column.field === 'rating') {\n          return {\n            ...column,\n            sortingOrder: ['desc', 'asc', null],\n          };\n        }\n\n        return column;\n      }),\n    [data.columns],\n  );\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid {...data} columns={columns} sortingOrder={['asc', 'desc', null]} />\n    </div>\n  );\n}\n",jsxPreview:"<DataGrid {...data} columns={columns} sortingOrder={['asc', 'desc', null]} />",moduleTS:"./OrderSortingPerColumnGrid.js",rawTS:"import * as React from 'react';\nimport { DataGrid, GridColumns } from '@mui/x-data-grid';\nimport { useDemoData } from '@mui/x-data-grid-generator';\n\nconst VISIBLE_FIELDS = ['name', 'rating', 'country', 'dateCreated', 'isAdmin'];\n\nexport default function OrderSortingPerColumnGrid() {\n  const { data } = useDemoData({\n    dataSet: 'Employee',\n    visibleFields: VISIBLE_FIELDS,\n    rowLength: 100,\n  });\n\n  const columns = React.useMemo<GridColumns>(\n    () =>\n      data.columns.map((column) => {\n        if (column.field === 'rating') {\n          return {\n            ...column,\n            sortingOrder: ['desc', 'asc', null],\n          };\n        }\n\n        return column;\n      }),\n    [data.columns],\n  );\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid {...data} columns={columns} sortingOrder={['asc', 'desc', null]} />\n    </div>\n  );\n}\n"},"OrderSortingGrid.js":{module:"./OrderSortingGrid.js",raw:"import * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useDemoData } from '@mui/x-data-grid-generator';\n\nconst VISIBLE_FIELDS = ['name', 'rating', 'country', 'dateCreated', 'isAdmin'];\n\nexport default function OrderSortingGrid() {\n  const { data } = useDemoData({\n    dataSet: 'Employee',\n    visibleFields: VISIBLE_FIELDS,\n    rowLength: 100,\n  });\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid\n        sortingOrder={['desc', 'asc']}\n        initialState={{\n          sorting: {\n            sortModel: [\n              {\n                field: 'commodity',\n                sort: 'asc',\n              },\n            ],\n          },\n        }}\n        {...data}\n      />\n    </div>\n  );\n}\n",jsxPreview:"<DataGrid\n  sortingOrder={['desc', 'asc']}\n  initialState={{\n    sorting: {\n      sortModel: [\n        {\n          field: 'commodity',\n          sort: 'asc',\n        },\n      ],\n    },\n  }}\n  {...data}\n/>",moduleTS:"./OrderSortingGrid.js",rawTS:"import * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useDemoData } from '@mui/x-data-grid-generator';\n\nconst VISIBLE_FIELDS = ['name', 'rating', 'country', 'dateCreated', 'isAdmin'];\n\nexport default function OrderSortingGrid() {\n  const { data } = useDemoData({\n    dataSet: 'Employee',\n    visibleFields: VISIBLE_FIELDS,\n    rowLength: 100,\n  });\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid\n        sortingOrder={['desc', 'asc']}\n        initialState={{\n          sorting: {\n            sortModel: [\n              {\n                field: 'commodity',\n                sort: 'asc',\n              },\n            ],\n          },\n        }}\n        {...data}\n      />\n    </div>\n  );\n}\n"},"ServerSortingGrid.js":{module:"./ServerSortingGrid.js",raw:"import * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { createFakeServer } from '@mui/x-data-grid-generator';\n\nconst VISIBLE_FIELDS = ['name', 'rating', 'country', 'dateCreated', 'isAdmin'];\n\nconst DATASET_OPTION = {\n  dataSet: 'Employee',\n  visibleFields: VISIBLE_FIELDS,\n  rowLength: 100,\n};\n\nconst { columns, useQuery } = createFakeServer(DATASET_OPTION);\n\nexport default function ServerSortingGrid() {\n  const [queryOptions, setQueryOptions] = React.useState({});\n\n  const handleSortModelChange = React.useCallback((sortModel) => {\n    // Here you save the data you need from the sort model\n    setQueryOptions({ sortModel: [...sortModel] });\n  }, []);\n\n  const { isLoading, data } = useQuery(queryOptions);\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid\n        rows={data}\n        columns={columns}\n        sortingMode=\"server\"\n        onSortModelChange={handleSortModelChange}\n        loading={isLoading}\n      />\n    </div>\n  );\n}\n",jsxPreview:'<DataGrid\n  rows={data}\n  columns={columns}\n  sortingMode="server"\n  onSortModelChange={handleSortModelChange}\n  loading={isLoading}\n/>',moduleTS:"./ServerSortingGrid.js",rawTS:"import * as React from 'react';\nimport { DataGrid, GridSortModel } from '@mui/x-data-grid';\nimport { UseDemoDataOptions, createFakeServer } from '@mui/x-data-grid-generator';\n\nconst VISIBLE_FIELDS = ['name', 'rating', 'country', 'dateCreated', 'isAdmin'];\n\nconst DATASET_OPTION: UseDemoDataOptions = {\n  dataSet: 'Employee',\n  visibleFields: VISIBLE_FIELDS,\n  rowLength: 100,\n};\n\nconst { columns, useQuery } = createFakeServer(DATASET_OPTION);\n\nexport default function ServerSortingGrid() {\n  const [queryOptions, setQueryOptions] = React.useState({});\n\n  const handleSortModelChange = React.useCallback((sortModel: GridSortModel) => {\n    // Here you save the data you need from the sort model\n    setQueryOptions({ sortModel: [...sortModel] });\n  }, []);\n\n  const { isLoading, data } = useQuery(queryOptions);\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid\n        rows={data}\n        columns={columns}\n        sortingMode=\"server\"\n        onSortModelChange={handleSortModelChange}\n        loading={isLoading}\n      />\n    </div>\n  );\n}\n"},"SortingApiNoSnap.js":{module:"./SortingApiNoSnap.js",raw:"import * as React from 'react';\nimport ApiDocs from 'docsx/src/modules/components/ApiDocs';\nimport api from 'docsx/pages/x/api/data-grid/grid-sort-api.json';\n\nexport default function SortingApiNoSnap() {\n  return <ApiDocs api={api} />;\n}\n"},"SortingSelectorsNoSnap.js":{module:"./SortingSelectorsNoSnap.js",raw:"import * as React from 'react';\nimport SelectorsDocs from 'docsx/src/modules/components/SelectorsDocs';\n\nexport default function SortingSelectorsNoSnap() {\n  return <SelectorsDocs category=\"Sorting\" />;\n}\n"}},M={"./BasicExampleDataGrid.js":function(){var e=(0,s.PT)({dataSet:"Employee",visibleFields:l,rowLength:100}).data;return(0,d.jsx)("div",{style:{height:400,width:"100%"},children:(0,d.jsx)(a._,(0,i.Z)({},e))})},"./BasicExampleDataGridPro.js":function(){var e=(0,s.PT)({dataSet:"Employee",visibleFields:u,rowLength:100}).data;return(0,d.jsx)("div",{style:{height:400,width:"100%"},children:(0,d.jsx)(c.s,(0,i.Z)({},e))})},"./InitialSort.js":function(){var e=(0,s.PT)({dataSet:"Employee",visibleFields:p,rowLength:100}).data;return(0,d.jsx)("div",{style:{height:400,width:"100%"},children:(0,d.jsx)(a._,(0,i.Z)((0,i.Z)({},e),{},{initialState:{sorting:{sortModel:[{field:"rating",sort:"desc"}]}}}))})},"./ControlledSort.js":function(){var e=(0,s.PT)({dataSet:"Employee",visibleFields:g,rowLength:100}).data,n=r.useState([{field:"rating",sort:"desc"}]),t=(0,m.Z)(n,2),o=t[0],l=t[1];return(0,d.jsx)("div",{style:{height:400,width:"100%"},children:(0,d.jsx)(a._,(0,i.Z)((0,i.Z)({},e),{},{sortModel:o,onSortModelChange:function(e){return l(e)}}))})},"./DisableSortingGrid.js":function(){var e=(0,s.PT)({dataSet:"Employee",visibleFields:f,rowLength:100}).data,n=r.useMemo((function(){return e.columns.map((function(e){return"rating"===e.field?(0,i.Z)((0,i.Z)({},e),{},{sortable:!1}):e}))}),[e.columns]);return(0,d.jsx)("div",{style:{height:400,width:"100%"},children:(0,d.jsx)(a._,(0,i.Z)((0,i.Z)({},e),{},{columns:n}))})},"./ExtendedSortComparator.js":function(){var e,n=(0,s.PT)({dataSet:"Employee",visibleFields:y,rowLength:100}).data,t=r.useMemo((function(){return[{field:"nameAdmin",headerName:"Name",valueGetter:function(e){return{name:e.row.name,isAdmin:e.row.isAdmin}},valueFormatter:function(e){var n=e.value;return n.isAdmin?"".concat(n.name," (admin)"):n.name},sortComparator:v,width:200}].concat((0,h.Z)(n.columns))}),[n.columns]);return(0,d.jsx)("div",{style:{height:400,width:"100%"},children:(0,d.jsx)(a._,(0,i.Z)((0,i.Z)({},n),{},{columns:t,initialState:(0,i.Z)((0,i.Z)({},n.initialState),{},{sorting:(0,i.Z)((0,i.Z)({},null===(e=n.initialState)||void 0===e?void 0:e.sorting),{},{sortModel:[{field:"nameAdmin",sort:"asc"}]})})}))})},"./FullyCustomSortComparator.js":function(){var e,n=(0,s.PT)({dataSet:"Employee",visibleFields:w,rowLength:100}).data,t=r.useMemo((function(){return[{field:"dateCreatedCustom",valueGetter:function(e){return e.row.dateCreated},headerName:"Created on",width:180,type:"date",sortComparator:C}].concat((0,h.Z)(n.columns))}),[n.columns]);return(0,d.jsx)("div",{style:{height:400,width:"100%"},children:(0,d.jsx)(a._,(0,i.Z)((0,i.Z)({},n),{},{columns:t,initialState:(0,i.Z)((0,i.Z)({},n.initialState),{},{sorting:(0,i.Z)((0,i.Z)({},null===(e=n.initialState)||void 0===e?void 0:e.sorting),{},{sortModel:[{field:"dateCreatedCustom",sort:"asc"}]})})}))})},"./OrderSortingPerColumnGrid.js":function(){var e=(0,s.PT)({dataSet:"Employee",visibleFields:b,rowLength:100}).data,n=r.useMemo((function(){return e.columns.map((function(e){return"rating"===e.field?(0,i.Z)((0,i.Z)({},e),{},{sortingOrder:["desc","asc",null]}):e}))}),[e.columns]);return(0,d.jsx)("div",{style:{height:400,width:"100%"},children:(0,d.jsx)(a._,(0,i.Z)((0,i.Z)({},e),{},{columns:n,sortingOrder:["asc","desc",null]}))})},"./OrderSortingGrid.js":function(){var e=(0,s.PT)({dataSet:"Employee",visibleFields:R,rowLength:100}).data;return(0,d.jsx)("div",{style:{height:400,width:"100%"},children:(0,d.jsx)(a._,(0,i.Z)({sortingOrder:["desc","asc"],initialState:{sorting:{sortModel:[{field:"commodity",sort:"asc"}]}}},e))})},"./ServerSortingGrid.js":function(){var e=r.useState({}),n=(0,m.Z)(e,2),t=n[0],o=n[1],i=r.useCallback((function(e){o({sortModel:(0,h.Z)(e)})}),[]),s=I(t),l=s.isLoading,c=s.data;return(0,d.jsx)("div",{style:{height:400,width:"100%"},children:(0,d.jsx)(a._,{rows:c,columns:G,sortingMode:"server",onSortModelChange:i,loading:l})})},"./SortingApiNoSnap.js":function(){return(0,d.jsx)(L.Z,{api:E})},"./SortingSelectorsNoSnap.js":function(){return(0,d.jsx)(k.Z,{category:"Sorting"})}};function F(){return(0,d.jsx)(o.Z,{demos:T,docs:A,demoComponents:M})}},36546:function(e,n,t){"use strict";var r=t(57379),o=(t(27378),t(67018)),i=t(20922),a=t(77379),s=t(89757),d=t(17931),l=t(29277),c=t(5805),u=t(95388),p=t(24246),m=(0,o.ZP)(l.Z)((function(e){return{fontSize:e.theme.typography.pxToRem(15),flexBasis:"33.33%",flexShrink:0,direction:"ltr",lineHeight:1.4,display:"inline-block",fontFamily:'Consolas, "Liberation Mono", Menlo, Courier, monospace',WebkitFontSmoothing:"subpixel-antialiased"}})),g=(0,o.ZP)(l.Z)((function(e){var n=e.theme;return(0,r.Z)({fontSize:n.typography.pxToRem(15),color:n.palette.text.secondary,"& code":{color:n.palette.secondary.main}},n.breakpoints.down("sm"),{display:"none"})}));n.Z=function(e){var n=e.api;return(0,p.jsx)(i.Z,{sx:{width:"100%"},children:n.properties.map((function(e,n){return(0,p.jsxs)(a.Z,{children:[(0,p.jsxs)(s.Z,{expandIcon:(0,p.jsx)(c.Z,{}),"aria-controls":"api-property-".concat(n,"-content"),id:"api-property-".concat(n,"-header"),children:[(0,p.jsx)(m,{children:"".concat(e.name,"()")}),(0,p.jsx)(g,{dangerouslySetInnerHTML:{__html:e.description}})]}),(0,p.jsxs)(d.Z,{sx:{display:"block"},children:[(0,p.jsx)(l.Z,{variant:"subtitle2",children:"Signature:"}),(0,p.jsx)(u.Z,{code:"".concat(e.name,": ").concat(e.type),language:"tsx",sx:{"& pre":{mb:1}}})]})]},n)}))})}},87442:function(e,n,t){"use strict";t.d(n,{Z:function(){return k}});var r=t(25778),o=t(95649),i=t(81936),a=t(57379),s=t(74968),d=t.n(s),l=t(27378),c=t(67018),u=t(77379),p=t(89757),m=t(79343),g=t(17931),f=t(29277),h=t(20922),S=t(5805),y=t(95388),v=t(69907),w=JSON.parse('[{"name":"gridAggregationLookupSelector","returnType":"GridAggregationLookup","description":"","supportsApiRef":true},{"name":"gridAggregationModelSelector","returnType":"GridAggregationModel","description":"","supportsApiRef":true},{"name":"gridColumnDefinitionsSelector","returnType":"GridStateColDef<any, any, any>[]","category":"Columns","description":"Get the columns as an array.","supportsApiRef":true},{"name":"gridColumnFieldsSelector","returnType":"string[]","category":"Columns","description":"Get the field of each column.","supportsApiRef":true},{"name":"gridColumnGroupsLookupSelector","returnType":"GridColumnGroupLookup","description":"","supportsApiRef":true},{"name":"gridColumnLookupSelector","returnType":"GridColumnLookup","category":"Columns","description":"Get the columns as a lookup (an object containing the field for keys and the definition for values).","supportsApiRef":true},{"name":"gridColumnMenuSelector","returnType":"GridColumnMenuState","description":"","supportsApiRef":false},{"name":"gridColumnPositionsSelector","returnType":"number[]","category":"Visible Columns","description":"Get the left position in pixel of each visible columns relative to the left of the first column.","supportsApiRef":true},{"name":"gridColumnReorderDragColSelector","returnType":"string","description":"","supportsApiRef":true},{"name":"gridColumnReorderSelector","returnType":"GridColumnReorderState","description":"","supportsApiRef":false},{"name":"gridColumnResizeSelector","returnType":"GridColumnResizeState","description":"","supportsApiRef":false},{"name":"gridColumnVisibilityModelSelector","returnType":"GridColumnVisibilityModel","category":"Visible Columns","description":"Get the column visibility model, containing the visibility status of each column.\\nIf a column is not registered in the model, it is visible.","supportsApiRef":true},{"name":"gridColumnsTotalWidthSelector","returnType":"number","category":"Visible Columns","description":"Get the summed width of all the visible columns.","supportsApiRef":true},{"name":"gridDensityFactorSelector","returnType":"number","description":"","supportsApiRef":true},{"name":"gridDensityHeaderGroupingMaxDepthSelector","returnType":"number","description":"","supportsApiRef":true},{"name":"gridDensityHeaderHeightSelector","returnType":"number","description":"","supportsApiRef":true},{"name":"gridDensityRowHeightSelector","returnType":"number","description":"","supportsApiRef":true},{"name":"gridDensitySelector","returnType":"GridDensityState","description":"","supportsApiRef":false},{"name":"gridDensityTotalHeaderHeightSelector","returnType":"number","description":"","supportsApiRef":true},{"name":"gridDensityValueSelector","returnType":"GridDensity","description":"","supportsApiRef":true},{"name":"gridEditRowsStateSelector","returnType":"GridEditRowsModel","description":"","supportsApiRef":false},{"name":"gridFilterModelSelector","returnType":"GridFilterModel","category":"Filtering","description":"Get the current filter model.","supportsApiRef":true},{"name":"gridFilterStateSelector","returnType":"GridFilterState","category":"Filtering","description":"","supportsApiRef":false},{"name":"gridFilterableColumnDefinitionsSelector","returnType":"GridStateColDef<any, any, any>[]","category":"Columns","description":"Get the filterable columns as an array.","supportsApiRef":true},{"name":"gridFilterableColumnLookupSelector","returnType":"GridColumnLookup","category":"Columns","description":"Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).","supportsApiRef":true},{"name":"gridFilteredSortedRowEntriesSelector","returnType":"{ id: GridRowId; model: GridValidRowModel }[]","category":"Filtering","description":"Get the id and the model of the rows accessible after the filtering process.\\nContains the collapsed children.","supportsApiRef":true},{"name":"gridFilteredSortedRowIdsSelector","returnType":"GridRowId[]","category":"Filtering","description":"Get the id of the rows accessible after the filtering process.\\nContains the collapsed children.","supportsApiRef":true},{"name":"gridFocusCellSelector","returnType":"GridCellIdentifier | null","description":"","supportsApiRef":true},{"name":"gridFocusColumnHeaderSelector","returnType":"GridColumnIdentifier | null","description":"","supportsApiRef":true},{"name":"gridFocusStateSelector","returnType":"GridFocusState","description":"","supportsApiRef":false},{"name":"gridPageCountSelector","returnType":"number","category":"Pagination","description":"Get the amount of pages needed to display all the rows if the pagination is enabled","supportsApiRef":true},{"name":"gridPageSelector","returnType":"number","category":"Pagination","description":"Get the index of the page to render if the pagination is enabled","supportsApiRef":true},{"name":"gridPageSizeSelector","returnType":"number","category":"Pagination","description":"Get the maximum amount of rows to display on a single page if the pagination is enabled","supportsApiRef":true},{"name":"gridPaginatedVisibleSortedGridRowEntriesSelector","returnType":"{ id: GridRowId; model: GridValidRowModel }[]","category":"Pagination","description":"Get the id and the model of each row to include in the current page if the pagination is enabled.","supportsApiRef":true},{"name":"gridPaginatedVisibleSortedGridRowIdsSelector","returnType":"GridRowId[]","category":"Pagination","description":"Get the id of each row to include in the current page if the pagination is enabled.","supportsApiRef":true},{"name":"gridPaginationRowRangeSelector","returnType":"{ firstRowIndex: number; lastRowIndex: number } | null","category":"Pagination","description":"Get the index of the first and the last row to include in the current page if the pagination is enabled.","supportsApiRef":true},{"name":"gridPinnedColumnsSelector","returnType":"GridPinnedColumns","description":"","supportsApiRef":false},{"name":"gridPreferencePanelStateSelector","returnType":"GridPreferencePanelState","description":"","supportsApiRef":false},{"name":"gridQuickFilterValuesSelector","returnType":"any[] | undefined","category":"Filtering","description":"Get the current quick filter values.","supportsApiRef":true},{"name":"gridResizingColumnFieldSelector","returnType":"string","description":"","supportsApiRef":true},{"name":"gridRowGroupingModelSelector","returnType":"GridRowGroupingModel","description":"","supportsApiRef":true},{"name":"gridRowGroupingSanitizedModelSelector","returnType":"string[]","description":"","supportsApiRef":true},{"name":"gridRowsMetaSelector","returnType":"GridRowsMetaState","description":"","supportsApiRef":false},{"name":"gridSelectionStateSelector","returnType":"GridSelectionModel","description":"","supportsApiRef":false},{"name":"gridSortModelSelector","returnType":"GridSortModel","category":"Sorting","description":"Get the current sorting model.","supportsApiRef":true},{"name":"gridSortedRowEntriesSelector","returnType":"{ id: GridRowId; model: GridValidRowModel }[]","category":"Sorting","description":"Get the id and the model of the rows after the sorting process.","supportsApiRef":true},{"name":"gridSortedRowIdsSelector","returnType":"GridRowId[]","category":"Sorting","description":"Get the id of the rows after the sorting process.","supportsApiRef":true},{"name":"gridTabIndexCellSelector","returnType":"GridCellIdentifier | null","description":"","supportsApiRef":true},{"name":"gridTabIndexColumnHeaderSelector","returnType":"GridColumnIdentifier | null","description":"","supportsApiRef":true},{"name":"gridTabIndexStateSelector","returnType":"GridTabIndexState","description":"","supportsApiRef":false},{"name":"gridVisibleColumnDefinitionsSelector","returnType":"GridStateColDef<any, any, any>[]","category":"Visible Columns","description":"Get the visible columns as a lookup (an object containing the field for keys and the definition for values).","supportsApiRef":true},{"name":"gridVisibleColumnFieldsSelector","returnType":"string[]","category":"Visible Columns","description":"Get the field of each visible column.","supportsApiRef":true},{"name":"gridVisibleRowCountSelector","returnType":"number","category":"Filtering","description":"Get the amount of rows accessible after the filtering process.","supportsApiRef":true},{"name":"gridVisibleSortedRowEntriesSelector","returnType":"{ id: GridRowId; model: GridValidRowModel }[]","category":"Filtering","description":"Get the id and the model of the rows accessible after the filtering process.\\nDoes not contain the collapsed children.","supportsApiRef":true},{"name":"gridVisibleSortedRowIdsSelector","returnType":"GridRowId[]","category":"Filtering","description":"Get the id of the rows accessible after the filtering process.\\nDoes not contain the collapsed children.","supportsApiRef":true},{"name":"gridVisibleSortedTopLevelRowEntriesSelector","returnType":"{ id: GridRowId; model: GridValidRowModel }[]","category":"Filtering","description":"Get the id and the model of the top level rows accessible after the filtering process.","supportsApiRef":true},{"name":"gridVisibleTopLevelRowCountSelector","returnType":"number","category":"Filtering","description":"Get the amount of top level rows accessible after the filtering process.","supportsApiRef":true},{"name":"selectedGridRowsCountSelector","returnType":"number","description":"","supportsApiRef":true},{"name":"selectedGridRowsSelector","returnType":"Map<GridRowId, GridValidRowModel>","description":"","supportsApiRef":true},{"name":"selectedIdsLookupSelector","returnType":"Record<GridRowId, GridRowId>","description":"","supportsApiRef":true}]'),C=t(24246),b=["selectors"],R=(0,c.ZP)(g.Z)({display:"block"}),D=(0,c.ZP)(f.Z)({fontFamily:'Consolas, "Liberation Mono", Menlo, Courier, monospace'}),x=(0,c.ZP)(f.Z)((function(e){return{color:e.theme.palette.text.secondary}})),G=(0,c.ZP)(y.Z)((function(e){return{"& pre":{marginBottom:e.theme.spacing(1)}}})),I=/^grid(.*)Selector/,L=function(e){var n=e.selector,t="".concat(n.name,": (state: GridState) => ").concat(n.returnType);n.supportsApiRef&&(t=["".concat(n.name,": (apiRef: GridApiRef) => ").concat(n.returnType),"// or","".concat(n.name,": (state: GridState, instanceId?: number) => ").concat(n.returnType)].join("\n"));var r=n.name.match(I),o=null==r?"value":"".concat(r[1][0].toLocaleLowerCase()).concat(r[1].slice(1)),i="const ".concat(o," = ").concat(n.name,"(apiRef.current.state);");return n.supportsApiRef&&(i=["".concat(n.name,"(apiRef)"),"// or","".concat(n.name,"(state, apiRef.current.instanceId)")].join("\n")),(0,C.jsxs)(u.Z,{children:[(0,C.jsxs)(p.Z,{expandIcon:(0,C.jsx)(S.Z,{}),"aria-controls":"api-property-".concat(n.name,"-content"),id:"api-property-".concat(n.name,"-header"),sx:(0,a.Z)({},"& .".concat(m.Z.content),{flexDirection:"column"}),children:[(0,C.jsx)(D,{variant:"subtitle2",children:n.name}),(0,C.jsx)(x,{variant:"caption",dangerouslySetInnerHTML:{__html:n.description}})]}),(0,C.jsxs)(R,{children:[(0,C.jsx)(f.Z,{variant:"subtitle2",children:"Signature:"}),(0,C.jsx)(G,{code:t,language:"tsx"}),(0,C.jsx)(f.Z,{variant:"subtitle2",children:"Example"}),(0,C.jsx)(G,{code:i,language:"tsx"})]})]})};function E(e){var n=e.selectors,t=(0,i.Z)(e,b);return(0,C.jsx)(h.Z,(0,o.Z)((0,o.Z)({},t),{},{children:n.map((function(e){return(0,C.jsx)(L,{selector:e},e.name)}))}))}var k=function(e){var n=e.category;if(n)return(0,C.jsx)(v.Z,{sx:{width:"100%"},children:(0,C.jsx)(E,{selectors:w.filter((function(e){return e.category===n}))})});var t={};return w.forEach((function(e){e.category&&(t[e.category]||(t[e.category]=[]),t[e.category].push(e))})),(0,C.jsx)(v.Z,{sx:{width:"100%"},children:d()(t).map((function(e){var n=(0,r.Z)(e,2),t=n[0],o=n[1];return(0,C.jsxs)(l.Fragment,{children:[(0,C.jsx)(f.Z,{variant:"h4",sx:function(e){return{mb:e.spacing(2)}},children:t}),(0,C.jsx)(E,{selectors:o,sx:function(e){return{"&:not(:last-child)":{mb:e.spacing(3)}}}})]},t)}))})}},37718:function(e,n,t){"use strict";t.d(n,{$:function(){return D},j:function(){return w}});var r=t(66283),o=t(77809),i=t(25778),a=t(23315),s=t(95649),d=t(74338),l=t.n(d),c=t(85851),u=t.n(c),p=t(96138),m=t.n(p),g=t(27378),f=t(59404),h=t(30552),S=t(81260),y=t(76352),v=function(e,n){return function(t){var r,o={id:t.id,row:t,field:e,rowNode:{}};return(null===(r=n.valueGetter)||void 0===r?void 0:r.call(n,o))||t[e]}},w=function(e,n,t,r){var o=t.minDelay,i=void 0===o?100:o,d=t.maxDelay,c=void 0===d?300:d,p=t.useCursorPagination;if(c<i)throw new Error("serverOptions.minDelay is larger than serverOptions.maxDelay ");var m,g,h,S=Math.random()*(c-i)+i,y=n.cursor,w=n.page,C=void 0===w?0:w,b=n.pageSize,R=function(e,n,t){if(void 0===n||0===n.items.length)return e;var r=n.items.map((function(e){var n=e.columnField;return v(n,t.find((function(e){return e.field===n})))})),o=n.items.map((function(e){var n=e.columnField,r=e.operatorValue,o=t.find((function(e){return e.field===n})),i=o.filterOperators.find((function(e){var n=e.value;return r===n})),a=e.value;if(o.valueParser){var s,d=o.valueParser;a=l()(e.value)?null===(s=e.value)||void 0===s?void 0:s.map((function(e){return d(e)})):d(e.value)}return null===i||void 0===i?void 0:i.getApplyFilterFn({filterItem:e,value:a},o)}));return n.linkOperator===f.GridLinkOperator.Or?e.filter((function(e){return n.items.some((function(n,t){var i=r[t](e);return null===o[t]||o[t]({value:i})}))})):e.filter((function(e){return n.items.every((function(n,t){var i=r[t](e);return null===o[t]||o[t]({value:i})}))}))}(e,n.filterModel,r),D=function(e,n){if(!e)return function(){return 0};var t=e.map((function(e){var t=e.field,r=n.find((function(e){return e.field===t}));return(0,s.Z)((0,s.Z)({},e),{},{valueGetter:v(t,r),sortComparator:r.sortComparator})}));return function(e,n){return t.reduce((function(t,r){var o=r.valueGetter,i=r.sort,a=r.sortComparator;if(0!==t)return t;var s=o(e),d=o(n);return"desc"===i?-1*a(s,d):a(s,d)}),0)}}(n.sortModel,r),x=(R=(0,a.Z)(R).sort(D)).length;b?p?(g=y?R.findIndex((function(e){return e.id===y})):0,m=(h=(g=Math.max(g,0))+b)>=R.length?void 0:R[h].id):(g=C*b,h=(C+1)*b):(g=0,h=R.length);var G={returnedRows:R.slice(g,h),nextCursor:m,totalRowCount:x};return new(u())((function(e){setTimeout((function(){e(G)}),S)}))},C={dataSet:"Commodity",rowLength:100,maxColumns:6},b="undefined"!==typeof DISABLE_CHANCE_RANDOM&&DISABLE_CHANCE_RANDOM,R={minDelay:b?0:100,maxDelay:b?0:300,useCursorPagination:!0},D=function(e,n){var t=(0,s.Z)((0,s.Z)({},C),e),a=(0,s.Z)((0,s.Z)({},R),n),d=(0,y.wu)(t),l=(0,y.aY)(t,d),c=(0,h.t)(),u=d.map((function(e){return(0,s.Z)((0,s.Z)({},c[e.type||"string"]),e)}));return{columns:d,columnsWithDefaultColDef:u,initialState:l,useQuery:function(e){var n=(0,y.PT)(t),d=n.data.rows,l=n.loading,c=g.useRef(e),p=g.useState({pageInfo:{},data:[]}),f=(0,i.Z)(p,2),h=f[0],v=f[1],C=g.useState(l),b=(0,i.Z)(C,2),R=b[0],D=b[1];g.useEffect((function(){if(l)return function(){};c.current=e;var n=!0;return D(!0),v((function(e){return 0===m()(e.pageInfo).length?e:(0,s.Z)((0,s.Z)({},e),{},{pageInfo:{}})})),function(){var t=(0,o.Z)((0,r.Z)().mark((function t(){var o,i,s,l,c;return(0,r.Z)().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,w(d,e,a,u);case 2:if(o=t.sent,i=o.returnedRows,s=o.nextCursor,l=o.totalRowCount,n){t.next=8;break}return t.abrupt("return");case 8:c={data:i,pageInfo:{totalRowCount:l,nextCursor:s,pageSize:i.length}},v((function(e){return(0,S.xb)(e,c)?e:c})),D(!1);case 11:case"end":return t.stop()}}),t)})));return function(){return t.apply(this,arguments)}}()(),function(){n=!1}}),[l,e,d]);var x=c.current!==e;return(0,s.Z)({isLoading:R||x},h)}}}},26582:function(e,n,t){"use strict";t.d(n,{s:function(){return Se}});var r=t(27378),o=t(12482),i=t(37919),a=t(9563),s=t(61354),d=t(2944),l=t(34535),c=t(87199),u=t(12986),p=t(97244),m=t(87495),g=t(50507),f=t(15805),h=t(81746),S=t(12084),y=t(89621),v=t(48715),w=t(69789),C=t(91676),b=t(83864),R=t(89446),D=t(23752),x=t(94053),G=t(47786),I=t(68753),L=t(95158),E=t(29136),k=t(8679),A=t(62430),T=t(61598),M=t(18327),F=t(92666),_=t(38177),P=t(82060),Z=t(31813),j=t(95088),V=t(18117),O=t(93652),N=t(98610),B=t(6569),z=t(66931),H=t(92356),$=t(44305),q=t(27298),Q=t(69863),W=t(86278),U=t(694),K=t(86329),X=t(45933),J=t(25778),Y=t(22755),ee=t(73259),ne=t(42225),te=t(94675),re=t(59694);function oe(e){var n=e.lazyLoadingFeatureFlag,t=e.rowsLoadingMode,r=e.gridDimensions;return!n||!r||t!==Y.GridFeatureModeConstant.server}var ie=t(95649),ae=t(23315),se=t(75912),de=t(18318),le=t(78110),ce=function(e,n){var t,o,i=(0,p.S)(e,n);return(0,m.m)(i,n),(0,g.e)(i,n),(0,X._)(i,n),(0,$.z)(i,n),function(e,n){var t,o=(null!==(t=n.experimentalFeatures)&&void 0!==t?t:{}).lazyLoading,i=r.useCallback((function(e){if(!o||n.rowsLoadingMode!==Y.GridFeatureModeConstant.server||!n.rowCount||e.ids.length>=n.rowCount)return e;for(var t,r=(0,ae.Z)(e.ids),i=0;i<n.rowCount-e.ids.length;i+=1){var a=(t=i,"".concat("auto-generated-skeleton-row-root","-").concat(t));r.push(a)}return(0,ie.Z)((0,ie.Z)({},e),{},{ids:r})}),[n.rowCount,n.rowsLoadingMode,o]);(0,se.Z)(e,"hydrateRows",i)}(i,n),(0,le.$)(i),(0,U.N)(i,n),(0,Q.P)(i,n),(0,f.Q)(i),(0,h.l)(S.k,i,n),(0,h.l)(W.g,i,n),(0,h.l)(q.l,i,n),(0,h.l)(y.P,i,n),(0,h.l)(de.a,i,n),(0,h.l)(v.F,i,n),(0,h.l)(null!==(t=n.experimentalFeatures)&&void 0!==t&&t.newEditingApi?w.U:C.U,i,n),(0,h.l)(b.W,i,n),(0,h.l)(R.Q,i,n),(0,h.l)(D.Z,i,n),(0,h.l)(x.B,i,n),(0,h.l)(G.ce,i,n),(0,h.l)(B.b,i,n),(0,h.l)(z.D,i,n),(0,h.l)(I.I,i,n),(0,h.l)(L.Q,i,n),(0,h.l)(E.V,i,n),(0,h.l)(k.u4,i,n),(0,H.H)(i),(0,A.D)(i,n),(0,S.r)(i,n),(0,q.X)(i,n),(0,de.d)(i,n),(0,y.C)(i,n),(0,v.K)(i,n),(0,T.G)(i),(0,W.k)(i,n),(0,M.n)(i),(0,k.ap)(i,n),(null!==(o=n.experimentalFeatures)&&void 0!==o&&o.newEditingApi?w.s:C.s)(i,n),(0,b.z)(i,n),(0,D.M)(i,n),(0,x.L)(i,n),(0,R.G)(i,n),(0,G.km)(i,n),(0,B.T)(i,n),(0,z.p)(i,n),(0,I.e)(i,n),(0,L.y)(i,n),(0,K.p)(i,n),(0,F.K)(i,n),(0,N.A)(i,n),function(e,n){var t,o=(0,te.y)(e,n),i=(0,ee.P)(e,Y.gridSortModelSelector),a=(0,ee.P)(e,Y.gridFilterModelSelector),s=r.useRef({firstRowToRender:0,lastRowToRender:0}),d=(null!==(t=n.experimentalFeatures)&&void 0!==t?t:{}).lazyLoading,l=r.useCallback((function(){var t=e.current.unstable_getRenderContext(),r=(0,re.sn)({firstIndex:t.firstRowIndex,lastIndex:t.lastRowIndex,minFirstIndex:0,maxLastIndex:o.rows.length,buffer:n.rowBuffer}),i=(0,J.Z)(r,2);return{firstRowToRender:i[0],lastRowToRender:i[1]}}),[e,n.rowBuffer,o.rows.length]),c=r.useCallback((function(t){var r=e.current.getRootDimensions();if(!oe({lazyLoadingFeatureFlag:d,rowsLoadingMode:n.rowsLoadingMode,gridDimensions:r})){var l={firstRowToRender:t.firstRowToRender,lastRowToRender:t.lastRowToRender,sortModel:i,filterModel:a};if(s.current.firstRowToRender!==t.firstRowToRender||s.current.lastRowToRender!==t.lastRowToRender){if(0===i.length&&0===a.items.length){var c=function(e,n){for(var t=n.firstRowIndex,r=n.lastRowIndex,o=e.slice(n.firstRowIndex,n.lastRowIndex),i=0,a=o.length-1,s=!1;!s&&t<r;)o[i].model||o[a].model||(s=!0),o[i].model&&(i+=1,t+=1),o[a].model&&(a-=1,r-=1);return s?{firstRowIndex:t,lastRowIndex:r}:void 0}(o.rows,{firstRowIndex:t.firstRowToRender,lastRowIndex:t.lastRowToRender});if(!c)return;l.firstRowToRender=c.firstRowIndex,l.lastRowToRender=c.lastRowIndex}s.current=t,e.current.publishEvent("fetchRows",l)}}}),[e,n.rowsLoadingMode,i,a,o.rows,d]),u=r.useCallback((function(t){var r=e.current.getRootDimensions();if(!oe({lazyLoadingFeatureFlag:d,rowsLoadingMode:n.rowsLoadingMode,gridDimensions:r})){e.current.unstable_requestPipeProcessorsApplication("hydrateRows");var o=l(),i={firstRowToRender:o.firstRowToRender,lastRowToRender:o.lastRowToRender,sortModel:t,filterModel:a};e.current.publishEvent("fetchRows",i)}}),[e,n.rowsLoadingMode,a,d,l]),p=r.useCallback((function(t){var r=e.current.getRootDimensions();if(!oe({lazyLoadingFeatureFlag:d,rowsLoadingMode:n.rowsLoadingMode,gridDimensions:r})){e.current.unstable_requestPipeProcessorsApplication("hydrateRows");var o=l(),a={firstRowToRender:o.firstRowToRender,lastRowToRender:o.lastRowToRender,sortModel:i,filterModel:t};e.current.publishEvent("fetchRows",a)}}),[e,n.rowsLoadingMode,i,d,l]);(0,ne.zn)(e,"renderedRowsIntervalChange",c),(0,ne.zn)(e,"sortModelChange",u),(0,ne.zn)(e,"filterModelChange",p),(0,ne.x3)(e,"fetchRows",n.onFetchRows)}(i,n),(0,E.p)(i),(0,_._)(i),(0,P.d)(i,n),(0,Z.D)(i),(0,j.J)(i,n),(0,V.I)(i,n),(0,O.s)(i),i},ue=t(38041),pe=t(94239),me=t(27016),ge=t(24246),fe="MTU5NjMxOTIwMDAwMA==",he=r.forwardRef((function(e,n){var t=(0,ue.d)(e),r=ce(t.apiRef,t);return(0,o.O)("x-data-grid-pro",fe),(0,ge.jsx)(a.d,{apiRef:r,props:t,children:(0,ge.jsx)(s.n,{className:t.className,style:t.style,sx:t.sx,ref:n,children:(0,ge.jsxs)(d.C,{children:[(0,ge.jsx)(l.f,{}),(0,ge.jsx)(c.U,{ColumnHeadersComponent:me.r,VirtualScrollerComponent:pe.X,children:(0,ge.jsx)(i.l,{packageName:"x-data-grid-pro",releaseInfo:fe})}),(0,ge.jsx)(u.B,{})]})})})})),Se=r.memo(he)},59404:function(e,n,t){"use strict";t.d(n,{GridEvents:function(){return o.GridEvents},GridLinkOperator:function(){return o.GridLinkOperator},GridRowModes:function(){return o.GridRowModes}});var r=t(1489);t.o(r,"GRID_DETAIL_PANEL_TOGGLE_COL_DEF")&&t.d(n,{GRID_DETAIL_PANEL_TOGGLE_COL_DEF:function(){return r.GRID_DETAIL_PANEL_TOGGLE_COL_DEF}}),t.o(r,"GRID_DETAIL_PANEL_TOGGLE_FIELD")&&t.d(n,{GRID_DETAIL_PANEL_TOGGLE_FIELD:function(){return r.GRID_DETAIL_PANEL_TOGGLE_FIELD}}),t.o(r,"GridEvents")&&t.d(n,{GridEvents:function(){return r.GridEvents}}),t.o(r,"GridLinkOperator")&&t.d(n,{GridLinkOperator:function(){return r.GridLinkOperator}}),t.o(r,"GridRowModes")&&t.d(n,{GridRowModes:function(){return r.GridRowModes}}),t.o(r,"gridColumnLookupSelector")&&t.d(n,{gridColumnLookupSelector:function(){return r.gridColumnLookupSelector}}),t.o(r,"gridColumnVisibilityModelSelector")&&t.d(n,{gridColumnVisibilityModelSelector:function(){return r.gridColumnVisibilityModelSelector}}),t.o(r,"gridDetailPanelExpandedRowsContentCacheSelector")&&t.d(n,{gridDetailPanelExpandedRowsContentCacheSelector:function(){return r.gridDetailPanelExpandedRowsContentCacheSelector}}),t.o(r,"gridFilteredDescendantCountLookupSelector")&&t.d(n,{gridFilteredDescendantCountLookupSelector:function(){return r.gridFilteredDescendantCountLookupSelector}}),t.o(r,"gridFilteredRowsLookupSelector")&&t.d(n,{gridFilteredRowsLookupSelector:function(){return r.gridFilteredRowsLookupSelector}}),t.o(r,"gridPageCountSelector")&&t.d(n,{gridPageCountSelector:function(){return r.gridPageCountSelector}}),t.o(r,"gridPageSelector")&&t.d(n,{gridPageSelector:function(){return r.gridPageSelector}}),t.o(r,"gridPaginatedVisibleSortedGridRowIdsSelector")&&t.d(n,{gridPaginatedVisibleSortedGridRowIdsSelector:function(){return r.gridPaginatedVisibleSortedGridRowIdsSelector}}),t.o(r,"gridRowIdsSelector")&&t.d(n,{gridRowIdsSelector:function(){return r.gridRowIdsSelector}}),t.o(r,"gridRowTreeSelector")&&t.d(n,{gridRowTreeSelector:function(){return r.gridRowTreeSelector}}),t.o(r,"gridVisibleColumnDefinitionsSelector")&&t.d(n,{gridVisibleColumnDefinitionsSelector:function(){return r.gridVisibleColumnDefinitionsSelector}}),t.o(r,"gridVisibleRowCountSelector")&&t.d(n,{gridVisibleRowCountSelector:function(){return r.gridVisibleRowCountSelector}}),t.o(r,"gridVisibleSortedRowIdsSelector")&&t.d(n,{gridVisibleSortedRowIdsSelector:function(){return r.gridVisibleSortedRowIdsSelector}});var o=t(53418);t.o(o,"GRID_DETAIL_PANEL_TOGGLE_COL_DEF")&&t.d(n,{GRID_DETAIL_PANEL_TOGGLE_COL_DEF:function(){return o.GRID_DETAIL_PANEL_TOGGLE_COL_DEF}}),t.o(o,"GRID_DETAIL_PANEL_TOGGLE_FIELD")&&t.d(n,{GRID_DETAIL_PANEL_TOGGLE_FIELD:function(){return o.GRID_DETAIL_PANEL_TOGGLE_FIELD}}),t.o(o,"gridColumnLookupSelector")&&t.d(n,{gridColumnLookupSelector:function(){return o.gridColumnLookupSelector}}),t.o(o,"gridColumnVisibilityModelSelector")&&t.d(n,{gridColumnVisibilityModelSelector:function(){return o.gridColumnVisibilityModelSelector}}),t.o(o,"gridDetailPanelExpandedRowsContentCacheSelector")&&t.d(n,{gridDetailPanelExpandedRowsContentCacheSelector:function(){return o.gridDetailPanelExpandedRowsContentCacheSelector}}),t.o(o,"gridFilteredDescendantCountLookupSelector")&&t.d(n,{gridFilteredDescendantCountLookupSelector:function(){return o.gridFilteredDescendantCountLookupSelector}}),t.o(o,"gridFilteredRowsLookupSelector")&&t.d(n,{gridFilteredRowsLookupSelector:function(){return o.gridFilteredRowsLookupSelector}}),t.o(o,"gridPageCountSelector")&&t.d(n,{gridPageCountSelector:function(){return o.gridPageCountSelector}}),t.o(o,"gridPageSelector")&&t.d(n,{gridPageSelector:function(){return o.gridPageSelector}}),t.o(o,"gridPaginatedVisibleSortedGridRowIdsSelector")&&t.d(n,{gridPaginatedVisibleSortedGridRowIdsSelector:function(){return o.gridPaginatedVisibleSortedGridRowIdsSelector}}),t.o(o,"gridRowIdsSelector")&&t.d(n,{gridRowIdsSelector:function(){return o.gridRowIdsSelector}}),t.o(o,"gridRowTreeSelector")&&t.d(n,{gridRowTreeSelector:function(){return o.gridRowTreeSelector}}),t.o(o,"gridVisibleColumnDefinitionsSelector")&&t.d(n,{gridVisibleColumnDefinitionsSelector:function(){return o.gridVisibleColumnDefinitionsSelector}}),t.o(o,"gridVisibleRowCountSelector")&&t.d(n,{gridVisibleRowCountSelector:function(){return o.gridVisibleRowCountSelector}}),t.o(o,"gridVisibleSortedRowIdsSelector")&&t.d(n,{gridVisibleSortedRowIdsSelector:function(){return o.gridVisibleSortedRowIdsSelector}});var i=t(20782);t.o(i,"GRID_DETAIL_PANEL_TOGGLE_COL_DEF")&&t.d(n,{GRID_DETAIL_PANEL_TOGGLE_COL_DEF:function(){return i.GRID_DETAIL_PANEL_TOGGLE_COL_DEF}}),t.o(i,"GRID_DETAIL_PANEL_TOGGLE_FIELD")&&t.d(n,{GRID_DETAIL_PANEL_TOGGLE_FIELD:function(){return i.GRID_DETAIL_PANEL_TOGGLE_FIELD}}),t.o(i,"gridColumnLookupSelector")&&t.d(n,{gridColumnLookupSelector:function(){return i.gridColumnLookupSelector}}),t.o(i,"gridColumnVisibilityModelSelector")&&t.d(n,{gridColumnVisibilityModelSelector:function(){return i.gridColumnVisibilityModelSelector}}),t.o(i,"gridDetailPanelExpandedRowsContentCacheSelector")&&t.d(n,{gridDetailPanelExpandedRowsContentCacheSelector:function(){return i.gridDetailPanelExpandedRowsContentCacheSelector}}),t.o(i,"gridFilteredDescendantCountLookupSelector")&&t.d(n,{gridFilteredDescendantCountLookupSelector:function(){return i.gridFilteredDescendantCountLookupSelector}}),t.o(i,"gridFilteredRowsLookupSelector")&&t.d(n,{gridFilteredRowsLookupSelector:function(){return i.gridFilteredRowsLookupSelector}}),t.o(i,"gridPageCountSelector")&&t.d(n,{gridPageCountSelector:function(){return i.gridPageCountSelector}}),t.o(i,"gridPageSelector")&&t.d(n,{gridPageSelector:function(){return i.gridPageSelector}}),t.o(i,"gridPaginatedVisibleSortedGridRowIdsSelector")&&t.d(n,{gridPaginatedVisibleSortedGridRowIdsSelector:function(){return i.gridPaginatedVisibleSortedGridRowIdsSelector}}),t.o(i,"gridRowIdsSelector")&&t.d(n,{gridRowIdsSelector:function(){return i.gridRowIdsSelector}}),t.o(i,"gridRowTreeSelector")&&t.d(n,{gridRowTreeSelector:function(){return i.gridRowTreeSelector}}),t.o(i,"gridVisibleColumnDefinitionsSelector")&&t.d(n,{gridVisibleColumnDefinitionsSelector:function(){return i.gridVisibleColumnDefinitionsSelector}}),t.o(i,"gridVisibleRowCountSelector")&&t.d(n,{gridVisibleRowCountSelector:function(){return i.gridVisibleRowCountSelector}}),t.o(i,"gridVisibleSortedRowIdsSelector")&&t.d(n,{gridVisibleSortedRowIdsSelector:function(){return i.gridVisibleSortedRowIdsSelector}});var a=t(33917);t.o(a,"GRID_DETAIL_PANEL_TOGGLE_COL_DEF")&&t.d(n,{GRID_DETAIL_PANEL_TOGGLE_COL_DEF:function(){return a.GRID_DETAIL_PANEL_TOGGLE_COL_DEF}}),t.o(a,"GRID_DETAIL_PANEL_TOGGLE_FIELD")&&t.d(n,{GRID_DETAIL_PANEL_TOGGLE_FIELD:function(){return a.GRID_DETAIL_PANEL_TOGGLE_FIELD}}),t.o(a,"gridColumnLookupSelector")&&t.d(n,{gridColumnLookupSelector:function(){return a.gridColumnLookupSelector}}),t.o(a,"gridColumnVisibilityModelSelector")&&t.d(n,{gridColumnVisibilityModelSelector:function(){return a.gridColumnVisibilityModelSelector}}),t.o(a,"gridDetailPanelExpandedRowsContentCacheSelector")&&t.d(n,{gridDetailPanelExpandedRowsContentCacheSelector:function(){return a.gridDetailPanelExpandedRowsContentCacheSelector}}),t.o(a,"gridFilteredDescendantCountLookupSelector")&&t.d(n,{gridFilteredDescendantCountLookupSelector:function(){return a.gridFilteredDescendantCountLookupSelector}}),t.o(a,"gridFilteredRowsLookupSelector")&&t.d(n,{gridFilteredRowsLookupSelector:function(){return a.gridFilteredRowsLookupSelector}}),t.o(a,"gridPageCountSelector")&&t.d(n,{gridPageCountSelector:function(){return a.gridPageCountSelector}}),t.o(a,"gridPageSelector")&&t.d(n,{gridPageSelector:function(){return a.gridPageSelector}}),t.o(a,"gridPaginatedVisibleSortedGridRowIdsSelector")&&t.d(n,{gridPaginatedVisibleSortedGridRowIdsSelector:function(){return a.gridPaginatedVisibleSortedGridRowIdsSelector}}),t.o(a,"gridRowIdsSelector")&&t.d(n,{gridRowIdsSelector:function(){return a.gridRowIdsSelector}}),t.o(a,"gridRowTreeSelector")&&t.d(n,{gridRowTreeSelector:function(){return a.gridRowTreeSelector}}),t.o(a,"gridVisibleColumnDefinitionsSelector")&&t.d(n,{gridVisibleColumnDefinitionsSelector:function(){return a.gridVisibleColumnDefinitionsSelector}}),t.o(a,"gridVisibleRowCountSelector")&&t.d(n,{gridVisibleRowCountSelector:function(){return a.gridVisibleRowCountSelector}}),t.o(a,"gridVisibleSortedRowIdsSelector")&&t.d(n,{gridVisibleSortedRowIdsSelector:function(){return a.gridVisibleSortedRowIdsSelector}})},49260:function(e,n,t){"use strict";t.d(n,{_:function(){return fe}});var r=t(27378),o=t(61354),i=t(2944),a=t(34535),s=t(87199),d=t(12986),l=t(9563),c=t(97244),u=t(81746),p=t(31813),m=t(29136),g=t(89621),f=t(47786),h=t(38177),S=t(82060),y=t(94053),v=t(83864),w=t(62430),C=t(68753),b=t(23752),R=t(91676),D=t(69789),x=t(48715),G=t(15805),I=t(61598),L=t(12084),E=t(50507),k=t(89446),A=t(92666),T=t(18117),M=t(95088),F=t(95158),_=t(93652),P=t(18327),Z=t(8679),j=t(87495),V=t(62905),O=t(95649),N=t(81936),B=t(77863),z=t(18913),H=t(80262),$=t(59694),q=t(24246),Q=["className","disableVirtualization"],W=r.forwardRef((function(e,n){var t=e.className,r=e.disableVirtualization,o=(0,N.Z)(e,Q),i=(0,$.cD)({ref:n,disableVirtualization:r}),a=i.getRootProps,s=i.getContentProps,d=i.getRenderZoneProps,l=i.getRows;return(0,q.jsx)(B.O,(0,O.Z)((0,O.Z)({className:t},a(o)),{},{children:(0,q.jsx)(z._,(0,O.Z)((0,O.Z)({},s()),{},{children:(0,q.jsx)(H.H,(0,O.Z)((0,O.Z)({},d()),{},{children:l()}))}))}))})),U=t(21526),K=t(25778),X=t(57379),J=t(38944),Y=t(82267),ee=t(67018),ne=t(42225),te=t(84933),re=t(28457),oe=t(96515),ie=t(76049),ae=t(73259),se=(0,ee.ZP)("div",{name:"MuiDataGrid",slot:"ScrollArea",overridesResolver:function(e,n){return[(0,X.Z)({},"&.".concat(re._["scrollArea--left"]),n["scrollArea--left"]),(0,X.Z)({},"&.".concat(re._["scrollArea--right"]),n["scrollArea--right"]),n.scrollArea]}})((function(){var e;return e={position:"absolute",top:0,zIndex:101,width:20,bottom:0},(0,X.Z)(e,"&.".concat(re._["scrollArea--left"]),{left:0}),(0,X.Z)(e,"&.".concat(re._["scrollArea--right"]),{right:0}),e}));function de(e){var n=e.scrollDirection,t=r.useRef(null),o=(0,te.l)(),i=r.useRef(),a=r.useState(!1),s=(0,K.Z)(a,2),d=s[0],l=s[1],c=(0,ae.P)(o,ie.wr),u=r.useRef({left:0,top:0}),p=(0,oe.B)(),m=function(e){var n=e.scrollDirection,t=e.classes,r={root:["scrollArea","scrollArea--".concat(n)]};return(0,Y.Z)(r,re.d,t)}((0,O.Z)((0,O.Z)({},e),{},{classes:p.classes})),g=r.useCallback((function(e){u.current=e}),[]),f=r.useCallback((function(e){var r;if("left"===n)r=e.clientX-t.current.getBoundingClientRect().right;else{if("right"!==n)throw new Error("MUI: Wrong drag direction");r=Math.max(1,e.clientX-t.current.getBoundingClientRect().left)}r=1.5*(r-1)+1,clearTimeout(i.current),i.current=setTimeout((function(){o.current.scroll({left:u.current.left+r,top:u.current.top})}))}),[n,o]);r.useEffect((function(){return function(){clearTimeout(i.current)}}),[]);var h=r.useCallback((function(){l((function(e){return!e}))}),[]);return(0,ne.zn)(o,"rowsScroll",g),(0,ne.zn)(o,"columnHeaderDragStart",h),(0,ne.zn)(o,"columnHeaderDragEnd",h),d?(0,q.jsx)(se,{ref:t,className:(0,J.Z)(m.root),onDragOver:f,style:{height:c}}):null}var le=r.memo(de),ce=t(10364),ue=t(93490),pe=["innerRef","className"],me=r.forwardRef((function(e,n){var t=e.innerRef,r=(e.className,(0,N.Z)(e,pe)),o=(0,U.L)({innerRef:t}),i=o.isDragging,a=o.getRootProps,s=o.getInnerProps,d=o.getColumnHeaders,l=o.getColumnGroupHeaders;return(0,q.jsxs)(ce.n,(0,O.Z)((0,O.Z)({ref:n},a(r)),{},{children:[(0,q.jsx)(le,{scrollDirection:"left"}),(0,q.jsxs)(ue.F,(0,O.Z)((0,O.Z)({isDragging:i},s()),{},{children:[l(),d()]})),(0,q.jsx)(le,{scrollDirection:"right"})]}))})),ge=r.forwardRef((function(e,n){var t=(0,V.pu)(e),r=function(e){var n,t,r=(0,c.S)(void 0,e);return(0,j.m)(r,e),(0,E.e)(r,e),(0,G.Q)(r),(0,u.l)(L.k,r,e),(0,u.l)(g.P,r,e),(0,u.l)(Z.u4,r,e),(0,u.l)(x.F,r,e),(0,u.l)(null!==(n=e.experimentalFeatures)&&void 0!==n&&n.newEditingApi?D.U:R.U,r,e),(0,u.l)(v.W,r,e),(0,u.l)(k.Q,r,e),(0,u.l)(b.Z,r,e),(0,u.l)(y.B,r,e),(0,u.l)(f.ce,r,e),(0,u.l)(C.I,r,e),(0,u.l)(F.Q,r,e),(0,u.l)(m.V,r,e),(0,w.D)(r,e),(0,L.r)(r,e),(0,g.C)(r,e),(0,x.K)(r,e),(0,I.G)(r),(0,P.n)(r),(0,Z.ap)(r,e),(null!==(t=e.experimentalFeatures)&&void 0!==t&&t.newEditingApi?D.s:R.s)(r,e),(0,v.z)(r,e),(0,b.M)(r,e),(0,y.L)(r,e),(0,k.G)(r,e),(0,f.km)(r,e),(0,C.e)(r,e),(0,F.y)(r,e),(0,A.K)(r,e),(0,m.p)(r),(0,h._)(r),(0,S.d)(r,e),(0,p.D)(r),(0,M.J)(r,e),(0,T.I)(r,e),(0,_.s)(r),r}(t);return(0,q.jsx)(l.d,{apiRef:r,props:t,children:(0,q.jsx)(o.n,{className:t.className,style:t.style,sx:t.sx,ref:n,children:(0,q.jsxs)(i.C,{children:[(0,q.jsx)(a.f,{}),(0,q.jsx)(s.U,{ColumnHeadersComponent:me,VirtualScrollerComponent:W}),(0,q.jsx)(d.B,{})]})})})})),fe=r.memo(ge)},84666:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/x/react-data-grid/sorting",function(){return t(29093)}])}},function(e){e.O(0,[7178,6047,6767,9332,5312,3397,5699,9007,3783,8496,6352,9774,2888,179],(function(){return n=84666,e(e.s=n);var n}));var n=e.O();_N_E=n}]);