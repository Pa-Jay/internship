(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9813],{39882:function(e,n,a){"use strict";var r=a(73203);n.Z=void 0;var i=r(a(19124)),o=a(24246),s=(0,i.default)((0,o.jsx)("path",{d:"m22.7 19-9.1-9.1c.9-2.3.4-5-1.5-6.9-2-2-5-2.4-7.4-1.3L9 6 6 9 1.6 4.7C.4 7.1.9 10.1 2.9 12.1c1.9 1.9 4.6 2.4 6.9 1.5l9.1 9.1c.4.4 1 .4 1.4 0l2.3-2.3c.5-.4.5-1.1.1-1.4z"}),"Build");n.Z=s},71292:function(e,n,a){"use strict";var r=a(73203);n.Z=void 0;var i=r(a(19124)),o=a(24246),s=(0,i.default)((0,o.jsx)("path",{d:"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"}),"Person");n.Z=s},73262:function(e,n,a){"use strict";a.d(n,{Z:function(){return l}});a(27378);var r=a(26582),i=a(24246),o=[{field:"id",headerName:"ID",width:90},{field:"firstName",headerName:"First name",width:150},{field:"lastName",headerName:"Last name",width:150},{field:"age",headerName:"Age",type:"number",width:110}],s=[{id:1,lastName:"Snow",firstName:"Jon",age:35},{id:2,lastName:"Lannister",firstName:"Cersei",age:42},{id:3,lastName:"Lannister",firstName:"Jaime",age:45},{id:4,lastName:"Stark",firstName:"Arya",age:16},{id:5,lastName:"Targaryen",firstName:"Daenerys",age:null},{id:6,lastName:"Melisandre",firstName:null,age:150},{id:7,lastName:"Clifford",firstName:"Ferrara",age:44},{id:8,lastName:"Frances",firstName:"Rossini",age:36},{id:9,lastName:"Roxie",firstName:"Harvey",age:65}],t=[{groupId:"Internal",description:"",children:[{field:"id"}]},{groupId:"Basic info",children:[{groupId:"Full name",children:[{field:"lastName"},{field:"firstName"}]},{field:"age"}]}];function l(){return(0,i.jsx)("div",{style:{height:400,width:"100%"},children:(0,i.jsx)(r.s,{experimentalFeatures:{columnGrouping:!0},rows:s,columns:o,checkboxSelection:!0,disableSelectionOnClick:!0,columnGroupingModel:t})})}},32962:function(e,n,a){"use strict";a.r(n),a.d(n,{default:function(){return C}});a(27378);var r=a(86767),i=a(73262),o=a(95649),s=a(81936),t=a(67018),l=a(20922),d=a(26582),c=a(39882),p=a(71292),m=a(24246),u=["icon"],g=[{field:"id",headerName:"ID",width:150},{field:"firstName",headerName:"First name",width:150},{field:"lastName",headerName:"Last name",width:150},{field:"age",headerName:"Age",type:"number",width:110}],f=[{id:1,lastName:"Snow",firstName:"Jon",age:35},{id:2,lastName:"Lannister",firstName:"Cersei",age:42},{id:3,lastName:"Lannister",firstName:"Jaime",age:45},{id:4,lastName:"Stark",firstName:"Arya",age:16},{id:5,lastName:"Targaryen",firstName:"Daenerys",age:null},{id:6,lastName:"Melisandre",firstName:null,age:150},{id:7,lastName:"Clifford",firstName:"Ferrara",age:44},{id:8,lastName:"Frances",firstName:"Rossini",age:36},{id:9,lastName:"Roxie",firstName:"Harvey",age:65}],h=(0,t.ZP)("div")((function(e){return{overflow:"hidden",display:"flex",alignItems:"center","& span":{overflow:"hidden",textOverflow:"ellipsis",marginRight:e.theme.spacing(.5)}}})),N=function(e){var n,a=e.icon,r=(0,s.Z)(e,u);return(0,m.jsxs)(h,{children:[(0,m.jsx)("span",{children:null!==(n=r.headerName)&&void 0!==n?n:r.groupId})," ",a]})},w=[{groupId:"internal_data",headerName:"Internal",description:"",renderHeaderGroup:function(e){return(0,m.jsx)(N,(0,o.Z)((0,o.Z)({},e),{},{icon:(0,m.jsx)(c.Z,{fontSize:"small"})}))},children:[{field:"id"}]},{groupId:"character",description:"Information about the character",headerName:"Basic info",renderHeaderGroup:function(e){return(0,m.jsx)(N,(0,o.Z)((0,o.Z)({},e),{},{icon:(0,m.jsx)(p.Z,{fontSize:"small"})}))},children:[{groupId:"naming",headerName:"Names",headerClassName:"my-super-theme--naming-group",children:[{field:"lastName"},{field:"firstName"}]},{field:"age"}]}];var y=[{field:"id",headerName:"ID",width:100},{field:"isAdmin",type:"boolean",headerName:"is admin",width:100},{field:"firstName",headerName:"First name",width:150},{field:"lastName",headerName:"Last name",width:150},{field:"age",headerName:"Age",type:"number",width:110}],k=[{id:1,isAdmin:!1,lastName:"Snow",firstName:"Jon",age:35},{id:2,isAdmin:!0,lastName:"Lannister",firstName:"Cersei",age:42},{id:3,isAdmin:!1,lastName:"Lannister",firstName:"Jaime",age:45},{id:4,isAdmin:!1,lastName:"Stark",firstName:"Arya",age:16},{id:5,isAdmin:!0,lastName:"Targaryen",firstName:"Daenerys",age:null},{id:6,isAdmin:!0,lastName:"Melisandre",firstName:null,age:150},{id:7,isAdmin:!1,lastName:"Clifford",firstName:"Ferrara",age:44},{id:8,isAdmin:!1,lastName:"Frances",firstName:"Rossini",age:36},{id:9,isAdmin:!1,lastName:"Roxie",firstName:"Harvey",age:65}],x=[{groupId:"internal_data",headerName:"Internal (not freeReordering)",description:"",children:[{field:"id"},{field:"isAdmin"}]},{groupId:"naming",headerName:"Full name (freeReordering)",freeReordering:!0,children:[{field:"lastName"},{field:"firstName"}]}];const v={en:{description:"Group your columns.",location:"/docs/data/data-grid/column-groups/column-groups.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Data grid - Column groups</h1><p class="description">Group your columns.</p>\n\n<p>Grouping columns allows you to have a multi-level hierarchy of columns in your header.</p>\n<aside class="MuiCallout-root MuiCallout-warning"><p>This feature is experimental, it needs to be explicitly activated using the <code>columnGrouping</code> experimental feature flag.</p>\n<div class="MuiCode-root"><pre><code class="language-tsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DataGrid</span></span> <span class="token attr-name">experimentalFeatures</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> columnGrouping<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>otherProps<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n\n</aside><h2 id="define-column-groups">Define column groups<a aria-labelledby="define-column-groups" class="anchor-link-style" href="#define-column-groups" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>You can define column groups with the <code>columnGroupingModel</code> prop.\nThis prop receives an array of column groups.</p>\n<p>A column group is defined by at least two properties:</p>\n<ul>\n<li><code>groupId</code>: a string used to identify the group</li>\n<li><code>children</code>: an array containing the children of the group</li>\n</ul>\n<p>The <code>children</code> attribute can contain two types of objects:</p>\n<ul>\n<li>leafs with type <code>{ field: string }</code>, which add the column with the corresponding <code>field</code> to this group.</li>\n<li>other column groups which allows you to have nested groups.</li>\n</ul>\n<aside class="MuiCallout-root MuiCallout-warning"><p>A column can only be associated with one group.</p>\n\n</aside><div class="MuiCode-root"><pre><code class="language-jsx"><span class="token operator">&lt;</span>DataGrid\n  columnGroupingModel<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">groupId</span><span class="token operator">:</span> <span class="token string">\'internal data\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">\'id\'</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token literal-property property">groupId</span><span class="token operator">:</span> <span class="token string">\'character\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n          <span class="token literal-property property">groupId</span><span class="token operator">:</span> <span class="token string">\'naming\'</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">\'lastName\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">\'firstName\'</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span> <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">\'age\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">}</span>\n<span class="token operator">/</span><span class="token operator">></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n',{demo:"BasicGroupingDemo.js",bg:"inline"},'<h2 id="customize-column-group">Customize column group<a aria-labelledby="customize-column-group" class="anchor-link-style" href="#customize-column-group" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>In addition to the required <code>groupId</code> and <code>children</code>, you can use the following optional properties to customize a column group:</p>\n<ul>\n<li><code>headerName</code>: the string displayed as the column&#39;s name (instead of <code>groupId</code>).</li>\n<li><code>description</code>: a text for the tooltip.</li>\n<li><code>headerClassName</code>: a CSS class for styling customization.</li>\n<li><code>renderHeaderGroup</code>: a function returning custom React component.</li>\n</ul>\n',{demo:"CustomizationDemo.js",bg:"inline"},'<h2 id="column-reordering">Column reordering <a href="/x/introduction/licensing/#pro-plan"><span class="plan-pro"></span></a><a aria-labelledby="column-reordering" class="anchor-link-style" href="#column-reordering" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>By default, the columns that are part of a group cannot be dragged to outside their group.\nYou can customize this behavior on specific groups by setting <code>freeReordering: true</code> in a column group object.</p>\n<p>In the example below, the <code>Full name</code> column group can be divided, but not other column groups.</p>\n',{demo:"BreakingGroupDemo.js",disableAd:!0,bg:"inline"},'<h2 id="manage-group-visibility">Manage group visibility \ud83d\udea7<a aria-labelledby="manage-group-visibility" class="anchor-link-style" href="#manage-group-visibility" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><aside class="MuiCallout-root MuiCallout-warning"><p>This feature isn&#39;t implemented yet. It&#39;s coming.</p>\n\n</aside><p>The column group should allow to switch between an extended/collapsed view which hide/show some columns</p>\n<h2 id="reordering-groups">Reordering groups \ud83d\udea7<a href="/x/introduction/licensing/#pro-plan"><span class="plan-pro"></span></a><a aria-labelledby="reordering-groups" class="anchor-link-style" href="#reordering-groups" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><aside class="MuiCallout-root MuiCallout-warning"><p>This feature isn&#39;t implemented yet. It&#39;s coming.</p>\n\n</aside><p>Users could drag and drop group header to move all the group children at once</p>\n<h2 id="api">API<a aria-labelledby="api" class="anchor-link-style" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="/x/api/data-grid/data-grid/">DataGrid</a></li>\n<li><a href="/x/api/data-grid/data-grid-pro/">DataGridPro</a></li>\n<li><a href="/x/api/data-grid/data-grid-premium/">DataGridPremium</a></li>\n</ul>\n'],toc:[{text:"Define column groups",level:2,hash:"define-column-groups",children:[]},{text:"Customize column group",level:2,hash:"customize-column-group",children:[]},{text:"Column reordering",level:2,hash:"column-reordering",children:[]},{text:"Manage group visibility",level:2,hash:"manage-group-visibility",children:[]},{text:"Reordering groups",level:2,hash:"reordering-groups",children:[]},{text:"API",level:2,hash:"api",children:[]}],title:"Data Grid - Column groups",headers:{title:"Data Grid - Column groups",components:[]}}},R={"BasicGroupingDemo.js":{module:"./BasicGroupingDemo.js",raw:"import * as React from 'react';\nimport { DataGridPro } from '@mui/x-data-grid-pro';\n\nconst columns = [\n  { field: 'id', headerName: 'ID', width: 90 },\n  {\n    field: 'firstName',\n    headerName: 'First name',\n    width: 150,\n  },\n  {\n    field: 'lastName',\n    headerName: 'Last name',\n    width: 150,\n  },\n  {\n    field: 'age',\n    headerName: 'Age',\n    type: 'number',\n    width: 110,\n  },\n];\n\nconst rows = [\n  { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n  { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n  { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n  { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n  { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n  { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n  { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n  { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n  { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n];\n\nconst columnGroupingModel = [\n  {\n    groupId: 'Internal',\n    description: '',\n    children: [{ field: 'id' }],\n  },\n  {\n    groupId: 'Basic info',\n    children: [\n      {\n        groupId: 'Full name',\n        children: [{ field: 'lastName' }, { field: 'firstName' }],\n      },\n      { field: 'age' },\n    ],\n  },\n];\n\nexport default function BasicGroupingDemo() {\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGridPro\n        experimentalFeatures={{ columnGrouping: true }}\n        rows={rows}\n        columns={columns}\n        checkboxSelection\n        disableSelectionOnClick\n        columnGroupingModel={columnGroupingModel}\n      />\n    </div>\n  );\n}\n",jsxPreview:"<DataGridPro\n  experimentalFeatures={{ columnGrouping: true }}\n  rows={rows}\n  columns={columns}\n  checkboxSelection\n  disableSelectionOnClick\n  columnGroupingModel={columnGroupingModel}\n/>",moduleTS:"./BasicGroupingDemo.js",rawTS:"import * as React from 'react';\nimport {\n  DataGridPro,\n  GridColDef,\n  GridColumnGroupingModel,\n} from '@mui/x-data-grid-pro';\n\nconst columns: GridColDef[] = [\n  { field: 'id', headerName: 'ID', width: 90 },\n  {\n    field: 'firstName',\n    headerName: 'First name',\n    width: 150,\n  },\n  {\n    field: 'lastName',\n    headerName: 'Last name',\n    width: 150,\n  },\n  {\n    field: 'age',\n    headerName: 'Age',\n    type: 'number',\n    width: 110,\n  },\n];\n\nconst rows = [\n  { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n  { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n  { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n  { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n  { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n  { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n  { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n  { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n  { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n];\n\nconst columnGroupingModel: GridColumnGroupingModel = [\n  {\n    groupId: 'Internal',\n    description: '',\n    children: [{ field: 'id' }],\n  },\n  {\n    groupId: 'Basic info',\n    children: [\n      {\n        groupId: 'Full name',\n        children: [{ field: 'lastName' }, { field: 'firstName' }],\n      },\n      { field: 'age' },\n    ],\n  },\n];\n\nexport default function BasicGroupingDemo() {\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGridPro\n        experimentalFeatures={{ columnGrouping: true }}\n        rows={rows}\n        columns={columns}\n        checkboxSelection\n        disableSelectionOnClick\n        columnGroupingModel={columnGroupingModel}\n      />\n    </div>\n  );\n}\n"},"CustomizationDemo.js":{module:"./CustomizationDemo.js",raw:"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport { DataGridPro } from '@mui/x-data-grid-pro';\nimport BuildIcon from '@mui/icons-material/Build';\nimport PersonIcon from '@mui/icons-material/Person';\n\nconst columns = [\n  { field: 'id', headerName: 'ID', width: 150 },\n  {\n    field: 'firstName',\n    headerName: 'First name',\n    width: 150,\n  },\n  {\n    field: 'lastName',\n    headerName: 'Last name',\n    width: 150,\n  },\n  {\n    field: 'age',\n    headerName: 'Age',\n    type: 'number',\n    width: 110,\n  },\n];\n\nconst rows = [\n  { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n  { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n  { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n  { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n  { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n  { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n  { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n  { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n  { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n];\n\nconst HeaderWithIconRoot = styled('div')(({ theme }) => ({\n  overflow: 'hidden',\n  display: 'flex',\n  alignItems: 'center',\n  '& span': {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    marginRight: theme.spacing(0.5),\n  },\n}));\n\nconst HeaderWithIcon = (props) => {\n  const { icon, ...params } = props;\n\n  return (\n    <HeaderWithIconRoot>\n      <span>{params.headerName ?? params.groupId}</span> {icon}\n    </HeaderWithIconRoot>\n  );\n};\n\nHeaderWithIcon.propTypes = {\n  /**\n   * A unique string identifying the group.\n   */\n  groupId: PropTypes.oneOfType([PropTypes.oneOf([null]), PropTypes.string])\n    .isRequired,\n  /**\n   * The title of the column rendered in the column header cell.\n   */\n  headerName: PropTypes.string,\n  icon: PropTypes.node,\n};\n\nconst columnGroupingModel = [\n  {\n    groupId: 'internal_data',\n    headerName: 'Internal',\n    description: '',\n    renderHeaderGroup: (params) => (\n      <HeaderWithIcon {...params} icon={<BuildIcon fontSize=\"small\" />} />\n    ),\n    children: [{ field: 'id' }],\n  },\n  {\n    groupId: 'character',\n    description: 'Information about the character',\n    headerName: 'Basic info',\n    renderHeaderGroup: (params) => (\n      <HeaderWithIcon {...params} icon={<PersonIcon fontSize=\"small\" />} />\n    ),\n    children: [\n      {\n        groupId: 'naming',\n        headerName: 'Names',\n        headerClassName: 'my-super-theme--naming-group',\n        children: [{ field: 'lastName' }, { field: 'firstName' }],\n      },\n      { field: 'age' },\n    ],\n  },\n];\n\nexport default function CustomizationDemo() {\n  return (\n    <Box\n      sx={{\n        height: 400,\n        width: '100%',\n        '& .my-super-theme--naming-group': {\n          backgroundColor: 'rgba(255, 7, 0, 0.55)',\n        },\n      }}\n    >\n      <DataGridPro\n        rows={rows}\n        columns={columns}\n        experimentalFeatures={{ columnGrouping: true }}\n        checkboxSelection\n        disableSelectionOnClick\n        columnGroupingModel={columnGroupingModel}\n      />\n    </Box>\n  );\n}\n",jsxPreview:"<DataGridPro\n  rows={rows}\n  columns={columns}\n  experimentalFeatures={{ columnGrouping: true }}\n  checkboxSelection\n  disableSelectionOnClick\n  columnGroupingModel={columnGroupingModel}\n/>",moduleTS:"./CustomizationDemo.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport {\n  DataGridPro,\n  GridColDef,\n  GridColumnGroupHeaderParams,\n  GridColumnGroupingModel,\n} from '@mui/x-data-grid-pro';\nimport BuildIcon from '@mui/icons-material/Build';\nimport PersonIcon from '@mui/icons-material/Person';\n\nconst columns: GridColDef[] = [\n  { field: 'id', headerName: 'ID', width: 150 },\n  {\n    field: 'firstName',\n    headerName: 'First name',\n    width: 150,\n  },\n  {\n    field: 'lastName',\n    headerName: 'Last name',\n    width: 150,\n  },\n  {\n    field: 'age',\n    headerName: 'Age',\n    type: 'number',\n    width: 110,\n  },\n];\n\nconst rows = [\n  { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n  { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n  { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n  { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n  { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n  { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n  { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n  { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n  { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n];\n\ninterface HeaderWithIconProps extends GridColumnGroupHeaderParams {\n  icon: React.ReactNode;\n}\n\nconst HeaderWithIconRoot = styled('div')(({ theme }) => ({\n  overflow: 'hidden',\n  display: 'flex',\n  alignItems: 'center',\n  '& span': {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    marginRight: theme.spacing(0.5),\n  },\n}));\n\nconst HeaderWithIcon = (props: HeaderWithIconProps) => {\n  const { icon, ...params } = props;\n\n  return (\n    <HeaderWithIconRoot>\n      <span>{params.headerName ?? params.groupId}</span> {icon}\n    </HeaderWithIconRoot>\n  );\n};\n\nconst columnGroupingModel: GridColumnGroupingModel = [\n  {\n    groupId: 'internal_data',\n    headerName: 'Internal',\n    description: '',\n    renderHeaderGroup: (params) => (\n      <HeaderWithIcon {...params} icon={<BuildIcon fontSize=\"small\" />} />\n    ),\n    children: [{ field: 'id' }],\n  },\n  {\n    groupId: 'character',\n    description: 'Information about the character',\n    headerName: 'Basic info',\n    renderHeaderGroup: (params) => (\n      <HeaderWithIcon {...params} icon={<PersonIcon fontSize=\"small\" />} />\n    ),\n    children: [\n      {\n        groupId: 'naming',\n        headerName: 'Names',\n        headerClassName: 'my-super-theme--naming-group',\n        children: [{ field: 'lastName' }, { field: 'firstName' }],\n      },\n      { field: 'age' },\n    ],\n  },\n];\n\nexport default function CustomizationDemo() {\n  return (\n    <Box\n      sx={{\n        height: 400,\n        width: '100%',\n        '& .my-super-theme--naming-group': {\n          backgroundColor: 'rgba(255, 7, 0, 0.55)',\n        },\n      }}\n    >\n      <DataGridPro\n        rows={rows}\n        columns={columns}\n        experimentalFeatures={{ columnGrouping: true }}\n        checkboxSelection\n        disableSelectionOnClick\n        columnGroupingModel={columnGroupingModel}\n      />\n    </Box>\n  );\n}\n"},"BreakingGroupDemo.js":{module:"./BreakingGroupDemo.js",raw:"import * as React from 'react';\nimport { DataGridPro } from '@mui/x-data-grid-pro';\n\nconst columns = [\n  { field: 'id', headerName: 'ID', width: 100 },\n  { field: 'isAdmin', type: 'boolean', headerName: 'is admin', width: 100 },\n  {\n    field: 'firstName',\n    headerName: 'First name',\n    width: 150,\n  },\n  {\n    field: 'lastName',\n    headerName: 'Last name',\n    width: 150,\n  },\n  {\n    field: 'age',\n    headerName: 'Age',\n    type: 'number',\n    width: 110,\n  },\n];\n\nconst rows = [\n  { id: 1, isAdmin: false, lastName: 'Snow', firstName: 'Jon', age: 35 },\n  { id: 2, isAdmin: true, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n  { id: 3, isAdmin: false, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n  { id: 4, isAdmin: false, lastName: 'Stark', firstName: 'Arya', age: 16 },\n  { id: 5, isAdmin: true, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n  { id: 6, isAdmin: true, lastName: 'Melisandre', firstName: null, age: 150 },\n  { id: 7, isAdmin: false, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n  { id: 8, isAdmin: false, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n  { id: 9, isAdmin: false, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n];\n\nconst columnGroupingModel = [\n  {\n    groupId: 'internal_data',\n    headerName: 'Internal (not freeReordering)',\n    description: '',\n    children: [{ field: 'id' }, { field: 'isAdmin' }],\n  },\n  {\n    groupId: 'naming',\n    headerName: 'Full name (freeReordering)',\n    freeReordering: true,\n    children: [{ field: 'lastName' }, { field: 'firstName' }],\n  },\n];\n\nexport default function BreakingGroupDemo() {\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGridPro\n        rows={rows}\n        columns={columns}\n        experimentalFeatures={{ columnGrouping: true }}\n        checkboxSelection\n        disableSelectionOnClick\n        columnGroupingModel={columnGroupingModel}\n      />\n    </div>\n  );\n}\n",jsxPreview:"<DataGridPro\n  rows={rows}\n  columns={columns}\n  experimentalFeatures={{ columnGrouping: true }}\n  checkboxSelection\n  disableSelectionOnClick\n  columnGroupingModel={columnGroupingModel}\n/>",moduleTS:"./BreakingGroupDemo.js",rawTS:"import * as React from 'react';\nimport {\n  DataGridPro,\n  GridColDef,\n  GridColumnGroupingModel,\n} from '@mui/x-data-grid-pro';\n\nconst columns: GridColDef[] = [\n  { field: 'id', headerName: 'ID', width: 100 },\n  { field: 'isAdmin', type: 'boolean', headerName: 'is admin', width: 100 },\n  {\n    field: 'firstName',\n    headerName: 'First name',\n    width: 150,\n  },\n  {\n    field: 'lastName',\n    headerName: 'Last name',\n    width: 150,\n  },\n  {\n    field: 'age',\n    headerName: 'Age',\n    type: 'number',\n    width: 110,\n  },\n];\n\nconst rows = [\n  { id: 1, isAdmin: false, lastName: 'Snow', firstName: 'Jon', age: 35 },\n  { id: 2, isAdmin: true, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n  { id: 3, isAdmin: false, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n  { id: 4, isAdmin: false, lastName: 'Stark', firstName: 'Arya', age: 16 },\n  { id: 5, isAdmin: true, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n  { id: 6, isAdmin: true, lastName: 'Melisandre', firstName: null, age: 150 },\n  { id: 7, isAdmin: false, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n  { id: 8, isAdmin: false, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n  { id: 9, isAdmin: false, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n];\n\nconst columnGroupingModel: GridColumnGroupingModel = [\n  {\n    groupId: 'internal_data',\n    headerName: 'Internal (not freeReordering)',\n    description: '',\n    children: [{ field: 'id' }, { field: 'isAdmin' }],\n  },\n  {\n    groupId: 'naming',\n    headerName: 'Full name (freeReordering)',\n    freeReordering: true,\n    children: [{ field: 'lastName' }, { field: 'firstName' }],\n  },\n];\n\nexport default function BreakingGroupDemo() {\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGridPro\n        rows={rows}\n        columns={columns}\n        experimentalFeatures={{ columnGrouping: true }}\n        checkboxSelection\n        disableSelectionOnClick\n        columnGroupingModel={columnGroupingModel}\n      />\n    </div>\n  );\n}\n"}},G={"./BasicGroupingDemo.js":i.Z,"./CustomizationDemo.js":function(){return(0,m.jsx)(l.Z,{sx:{height:400,width:"100%","& .my-super-theme--naming-group":{backgroundColor:"rgba(255, 7, 0, 0.55)"}},children:(0,m.jsx)(d.s,{rows:f,columns:g,experimentalFeatures:{columnGrouping:!0},checkboxSelection:!0,disableSelectionOnClick:!0,columnGroupingModel:w})})},"./BreakingGroupDemo.js":function(){return(0,m.jsx)("div",{style:{height:400,width:"100%"},children:(0,m.jsx)(d.s,{rows:k,columns:y,experimentalFeatures:{columnGrouping:!0},checkboxSelection:!0,disableSelectionOnClick:!0,columnGroupingModel:x})})}};function C(){return(0,m.jsx)(r.Z,{demos:R,docs:v,demoComponents:G})}},26582:function(e,n,a){"use strict";a.d(n,{s:function(){return Ne}});var r=a(27378),i=a(12482),o=a(37919),s=a(9563),t=a(61354),l=a(2944),d=a(34535),c=a(87199),p=a(12986),m=a(97244),u=a(87495),g=a(50507),f=a(15805),h=a(81746),N=a(12084),w=a(89621),y=a(48715),k=a(69789),x=a(91676),v=a(83864),R=a(89446),G=a(23752),C=a(94053),b=a(47786),I=a(68753),M=a(95158),D=a(29136),F=a(8679),S=a(62430),A=a(61598),T=a(18327),P=a(92666),L=a(38177),j=a(82060),B=a(31813),z=a(95088),H=a(18117),O=a(93652),_=a(98610),Z=a(6569),J=a(66931),W=a(92356),E=a(44305),q=a(27298),U=a(69863),K=a(86278),V=a(694),X=a(86329),Q=a(45933),$=a(25778),Y=a(22755),ee=a(73259),ne=a(42225),ae=a(94675),re=a(59694);function ie(e){var n=e.lazyLoadingFeatureFlag,a=e.rowsLoadingMode,r=e.gridDimensions;return!n||!r||a!==Y.GridFeatureModeConstant.server}var oe=a(95649),se=a(23315),te=a(75912),le=a(18318),de=a(78110),ce=function(e,n){var a,i,o=(0,m.S)(e,n);return(0,u.m)(o,n),(0,g.e)(o,n),(0,Q._)(o,n),(0,E.z)(o,n),function(e,n){var a,i=(null!==(a=n.experimentalFeatures)&&void 0!==a?a:{}).lazyLoading,o=r.useCallback((function(e){if(!i||n.rowsLoadingMode!==Y.GridFeatureModeConstant.server||!n.rowCount||e.ids.length>=n.rowCount)return e;for(var a,r=(0,se.Z)(e.ids),o=0;o<n.rowCount-e.ids.length;o+=1){var s=(a=o,"".concat("auto-generated-skeleton-row-root","-").concat(a));r.push(s)}return(0,oe.Z)((0,oe.Z)({},e),{},{ids:r})}),[n.rowCount,n.rowsLoadingMode,i]);(0,te.Z)(e,"hydrateRows",o)}(o,n),(0,de.$)(o),(0,V.N)(o,n),(0,U.P)(o,n),(0,f.Q)(o),(0,h.l)(N.k,o,n),(0,h.l)(K.g,o,n),(0,h.l)(q.l,o,n),(0,h.l)(w.P,o,n),(0,h.l)(le.a,o,n),(0,h.l)(y.F,o,n),(0,h.l)(null!==(a=n.experimentalFeatures)&&void 0!==a&&a.newEditingApi?k.U:x.U,o,n),(0,h.l)(v.W,o,n),(0,h.l)(R.Q,o,n),(0,h.l)(G.Z,o,n),(0,h.l)(C.B,o,n),(0,h.l)(b.ce,o,n),(0,h.l)(Z.b,o,n),(0,h.l)(J.D,o,n),(0,h.l)(I.I,o,n),(0,h.l)(M.Q,o,n),(0,h.l)(D.V,o,n),(0,h.l)(F.u4,o,n),(0,W.H)(o),(0,S.D)(o,n),(0,N.r)(o,n),(0,q.X)(o,n),(0,le.d)(o,n),(0,w.C)(o,n),(0,y.K)(o,n),(0,A.G)(o),(0,K.k)(o,n),(0,T.n)(o),(0,F.ap)(o,n),(null!==(i=n.experimentalFeatures)&&void 0!==i&&i.newEditingApi?k.s:x.s)(o,n),(0,v.z)(o,n),(0,G.M)(o,n),(0,C.L)(o,n),(0,R.G)(o,n),(0,b.km)(o,n),(0,Z.T)(o,n),(0,J.p)(o,n),(0,I.e)(o,n),(0,M.y)(o,n),(0,X.p)(o,n),(0,P.K)(o,n),(0,_.A)(o,n),function(e,n){var a,i=(0,ae.y)(e,n),o=(0,ee.P)(e,Y.gridSortModelSelector),s=(0,ee.P)(e,Y.gridFilterModelSelector),t=r.useRef({firstRowToRender:0,lastRowToRender:0}),l=(null!==(a=n.experimentalFeatures)&&void 0!==a?a:{}).lazyLoading,d=r.useCallback((function(){var a=e.current.unstable_getRenderContext(),r=(0,re.sn)({firstIndex:a.firstRowIndex,lastIndex:a.lastRowIndex,minFirstIndex:0,maxLastIndex:i.rows.length,buffer:n.rowBuffer}),o=(0,$.Z)(r,2);return{firstRowToRender:o[0],lastRowToRender:o[1]}}),[e,n.rowBuffer,i.rows.length]),c=r.useCallback((function(a){var r=e.current.getRootDimensions();if(!ie({lazyLoadingFeatureFlag:l,rowsLoadingMode:n.rowsLoadingMode,gridDimensions:r})){var d={firstRowToRender:a.firstRowToRender,lastRowToRender:a.lastRowToRender,sortModel:o,filterModel:s};if(t.current.firstRowToRender!==a.firstRowToRender||t.current.lastRowToRender!==a.lastRowToRender){if(0===o.length&&0===s.items.length){var c=function(e,n){for(var a=n.firstRowIndex,r=n.lastRowIndex,i=e.slice(n.firstRowIndex,n.lastRowIndex),o=0,s=i.length-1,t=!1;!t&&a<r;)i[o].model||i[s].model||(t=!0),i[o].model&&(o+=1,a+=1),i[s].model&&(s-=1,r-=1);return t?{firstRowIndex:a,lastRowIndex:r}:void 0}(i.rows,{firstRowIndex:a.firstRowToRender,lastRowIndex:a.lastRowToRender});if(!c)return;d.firstRowToRender=c.firstRowIndex,d.lastRowToRender=c.lastRowIndex}t.current=a,e.current.publishEvent("fetchRows",d)}}}),[e,n.rowsLoadingMode,o,s,i.rows,l]),p=r.useCallback((function(a){var r=e.current.getRootDimensions();if(!ie({lazyLoadingFeatureFlag:l,rowsLoadingMode:n.rowsLoadingMode,gridDimensions:r})){e.current.unstable_requestPipeProcessorsApplication("hydrateRows");var i=d(),o={firstRowToRender:i.firstRowToRender,lastRowToRender:i.lastRowToRender,sortModel:a,filterModel:s};e.current.publishEvent("fetchRows",o)}}),[e,n.rowsLoadingMode,s,l,d]),m=r.useCallback((function(a){var r=e.current.getRootDimensions();if(!ie({lazyLoadingFeatureFlag:l,rowsLoadingMode:n.rowsLoadingMode,gridDimensions:r})){e.current.unstable_requestPipeProcessorsApplication("hydrateRows");var i=d(),s={firstRowToRender:i.firstRowToRender,lastRowToRender:i.lastRowToRender,sortModel:o,filterModel:a};e.current.publishEvent("fetchRows",s)}}),[e,n.rowsLoadingMode,o,l,d]);(0,ne.zn)(e,"renderedRowsIntervalChange",c),(0,ne.zn)(e,"sortModelChange",p),(0,ne.zn)(e,"filterModelChange",m),(0,ne.x3)(e,"fetchRows",n.onFetchRows)}(o,n),(0,D.p)(o),(0,L._)(o),(0,j.d)(o,n),(0,B.D)(o),(0,z.J)(o,n),(0,H.I)(o,n),(0,O.s)(o),o},pe=a(38041),me=a(94239),ue=a(27016),ge=a(24246),fe="MTU5NjMxOTIwMDAwMA==",he=r.forwardRef((function(e,n){var a=(0,pe.d)(e),r=ce(a.apiRef,a);return(0,i.O)("x-data-grid-pro",fe),(0,ge.jsx)(s.d,{apiRef:r,props:a,children:(0,ge.jsx)(t.n,{className:a.className,style:a.style,sx:a.sx,ref:n,children:(0,ge.jsxs)(l.C,{children:[(0,ge.jsx)(d.f,{}),(0,ge.jsx)(c.U,{ColumnHeadersComponent:ue.r,VirtualScrollerComponent:me.X,children:(0,ge.jsx)(o.l,{packageName:"x-data-grid-pro",releaseInfo:fe})}),(0,ge.jsx)(p.B,{})]})})})})),Ne=r.memo(he)},67571:function(e,n,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/x/react-data-grid/column-groups",function(){return a(32962)}])}},function(e){e.O(0,[6047,6767,9332,9007,8496,9774,2888,179],(function(){return n=67571,e(e.s=n);var n}));var n=e.O();_N_E=n}]);