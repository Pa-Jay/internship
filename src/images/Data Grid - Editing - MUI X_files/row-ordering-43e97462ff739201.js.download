(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1750],{60521:function(n,a,e){"use strict";e.d(a,{Z:function(){return w}});var o=e(66283),s=e(77809),t=e(25778),r=e(23315),i=e(85851),d=e.n(i),c=e(27378),l=e(26582),p=e(76352),u=e(24246);function g(n,a,e){return new(d())((function(o){setTimeout((function(){var s=(0,r.Z)(e),t=s.splice(n,1)[0];s.splice(a,0,t),o(s)}),500*Math.random()+100)}))}function w(){var n=(0,p.PT)({dataSet:"Commodity",rowLength:20,maxColumns:20}),a=n.data,e=n.loading,r=c.useState(a.rows),i=(0,t.Z)(r,2),d=i[0],w=i[1],h=c.useState(e),m=(0,t.Z)(h,2),f=m[0],k=m[1];c.useEffect((function(){w(a.rows)}),[a]),c.useEffect((function(){k(e)}),[e]);var R=function(){var n=(0,s.Z)((0,o.Z)().mark((function n(a){var e;return(0,o.Z)().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return k(!0),n.next=3,g(a.oldIndex,a.targetIndex,d);case 3:e=n.sent,w(e),k(!1);case 6:case"end":return n.stop()}}),n)})));return function(a){return n.apply(this,arguments)}}();return(0,u.jsx)("div",{style:{height:400,width:"100%"},children:(0,u.jsx)(l.s,{loading:f,rows:d,columns:a.columns,rowReordering:!0,onRowOrderChange:R})})}},64759:function(n,a,e){"use strict";e.r(a),e.d(a,{default:function(){return c}});e(27378);var o=e(86767),s=e(60521);const t={en:{description:"Drag and drop your rows to reorder them.",location:"/docs/data/data-grid/row-ordering/row-ordering.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Data grid - Row ordering <a href="/x/introduction/licensing/#pro-plan"><span class="plan-pro"></span></a></h1><p class="description">Drag and drop your rows to reorder them.</p>\n\n<p>Row reordering lets users rearrange rows by dragging the special reordering cell.</p>\n<p>By default, row reordering is disabled.\nTo enable it, you need to add the <code>rowReordering</code> prop.</p>\n<div class="MuiCode-root"><pre><code class="language-tsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DataGridPro</span></span> <span class="token attr-name">rowReordering</span> <span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n',{demo:"RowOrderingGrid.js",disableAd:!0,bg:"inline"},'<p>To capture changes in the order of the dragged row, you can pass a callback to the <code>onRowOrderChange</code> prop. This callback is called with a <code>GridRowOrderChangeParams</code> object.</p>\n<p>In addition, you can import the following events to customize the row reordering experience:</p>\n<ul>\n<li><code>rowDragStart</code>: emitted when dragging of a row starts.</li>\n<li><code>rowDragOver</code>: emitted when dragging a row over another row.</li>\n<li><code>rowDragEnd</code>: emitted when dragging of a row stops.</li>\n</ul>\n<h2 id="customizing-the-reorder-value">Customizing the reorder value<a aria-labelledby="customizing-the-reorder-value" class="anchor-link-style" href="#customizing-the-reorder-value" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>By default, when you start dragging a row, the <code>id</code> is displayed in the draggable box.\nTo change this, you can give a value to the <code>__reorder__</code> field for each row.</p>\n<div class="MuiCode-root"><pre><code class="language-tsx"><span class="token keyword">const</span> columns<span class="token operator">:</span> GridColumns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> field<span class="token operator">:</span> <span class="token string">\'brand\'</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> rows<span class="token operator">:</span> GridRowsProp <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> brand<span class="token operator">:</span> <span class="token string">\'Nike\'</span><span class="token punctuation">,</span> __reorder__<span class="token operator">:</span> <span class="token string">\'Nike\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> brand<span class="token operator">:</span> <span class="token string">\'Adidas\'</span><span class="token punctuation">,</span> __reorder__<span class="token operator">:</span> <span class="token string">\'Adidas\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> brand<span class="token operator">:</span> <span class="token string">\'Puma\'</span><span class="token punctuation">,</span> __reorder__<span class="token operator">:</span> <span class="token string">\'Puma\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DataGridPro</span></span> <span class="token attr-name">rows</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>rows<span class="token punctuation">}</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">rowReordering</span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n<h2 id="customizing-the-row-reordering-icon">Customizing the row reordering icon<a aria-labelledby="customizing-the-row-reordering-icon" class="anchor-link-style" href="#customizing-the-row-reordering-icon" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>To change the icon used for the row reordering, you can provide a different component for the <a href="/x/react-data-grid/components/#icons">icon slot</a> as follow:</p>\n<div class="MuiCode-root"><pre><code class="language-tsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DataGridPro</span></span>\n  <span class="token attr-name">components</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n    RowReorderIcon<span class="token operator">:</span> CustomMoveIcon<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n<p>Another way to customize is to add a column with <code>field: __reorder__</code> to your set of columns.\nThat way, you can overwrite any of the properties from the <code>GRID_REORDER_COL_DEF</code> column.\nThe grid will detect that there is already a reorder column defined and it will not add another one in the default position.\nIf you only set the <code>field</code>, then it is up to you to configure the remaining options (e.g. disable the column menu, filtering, sorting).\nTo start with our suggested configuration, spread <code>GRID_REORDER_COL_DEF</code> when defining the column.</p>\n<div class="MuiCode-root"><pre><code class="language-tsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DataGridPro</span></span>\n  <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token operator">...</span><span class="token constant">GRID_REORDER_COL_DEF</span><span class="token punctuation">,</span> <span class="token comment">// Already contains the right field</span>\n      width<span class="token operator">:</span> <span class="token number">40</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n<p>This approach can also be used to change the location of the toggle column.</p>\n<aside class="MuiCallout-root MuiCallout-warning"><p>For now, row reordering is disabled if sorting is applied to the grid.</p>\n\n</aside><h2 id="reordering-rows-with-row-grouping">Reordering rows with row grouping \ud83d\udea7<a aria-labelledby="reordering-rows-with-row-grouping" class="anchor-link-style" href="#reordering-rows-with-row-grouping" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><aside class="MuiCallout-root MuiCallout-warning"><p>This feature isn&#39;t implemented yet. It&#39;s coming.</p>\n<p>\ud83d\udc4d Upvote <a href="https://github.com/mui/mui-x/issues/4821">issue #4821</a> if you want to see it land faster.</p>\n\n</aside><h2 id="reordering-rows-with-tree-data">Reordering rows with tree data \ud83d\udea7<a aria-labelledby="reordering-rows-with-tree-data" class="anchor-link-style" href="#reordering-rows-with-tree-data" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><aside class="MuiCallout-root MuiCallout-warning"><p>This feature isn&#39;t implemented yet. It&#39;s coming.</p>\n<p>\ud83d\udc4d Upvote <a href="https://github.com/mui/mui-x/issues/4821">issue #4821</a> if you want to see it land faster.</p>\n\n</aside><h2 id="api">API<a aria-labelledby="api" class="anchor-link-style" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="/x/api/data-grid/data-grid/">DataGrid</a></li>\n<li><a href="/x/api/data-grid/data-grid-pro/">DataGridPro</a></li>\n<li><a href="/x/api/data-grid/data-grid-premium/">DataGridPremium</a></li>\n</ul>\n'],toc:[{text:"Customizing the reorder value",level:2,hash:"customizing-the-reorder-value",children:[]},{text:"Customizing the row reordering icon",level:2,hash:"customizing-the-row-reordering-icon",children:[]},{text:"Reordering rows with row grouping",level:2,hash:"reordering-rows-with-row-grouping",children:[]},{text:"Reordering rows with tree data",level:2,hash:"reordering-rows-with-tree-data",children:[]},{text:"API",level:2,hash:"api",children:[]}],title:"Data Grid - Row ordering",headers:{title:"Data Grid - Row ordering",components:[]}}},r={"RowOrderingGrid.js":{module:"./RowOrderingGrid.js",raw:"import * as React from 'react';\nimport { DataGridPro } from '@mui/x-data-grid-pro';\nimport { useDemoData } from '@mui/x-data-grid-generator';\n\nfunction updateRowPosition(initialIndex, newIndex, rows) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      const rowsClone = [...rows];\n      const row = rowsClone.splice(initialIndex, 1)[0];\n      rowsClone.splice(newIndex, 0, row);\n      resolve(rowsClone);\n    }, Math.random() * 500 + 100); // simulate network latency\n  });\n}\n\nexport default function RowOrderingGrid() {\n  const { data, loading: initialLoadingState } = useDemoData({\n    dataSet: 'Commodity',\n    rowLength: 20,\n    maxColumns: 20,\n  });\n\n  const [rows, setRows] = React.useState(data.rows);\n  const [loading, setLoading] = React.useState(initialLoadingState);\n\n  React.useEffect(() => {\n    setRows(data.rows);\n  }, [data]);\n\n  React.useEffect(() => {\n    setLoading(initialLoadingState);\n  }, [initialLoadingState]);\n\n  const handleRowOrderChange = async (params) => {\n    setLoading(true);\n    const newRows = await updateRowPosition(\n      params.oldIndex,\n      params.targetIndex,\n      rows,\n    );\n\n    setRows(newRows);\n    setLoading(false);\n  };\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGridPro\n        loading={loading}\n        rows={rows}\n        columns={data.columns}\n        rowReordering\n        onRowOrderChange={handleRowOrderChange}\n      />\n    </div>\n  );\n}\n",jsxPreview:"<DataGridPro\n  loading={loading}\n  rows={rows}\n  columns={data.columns}\n  rowReordering\n  onRowOrderChange={handleRowOrderChange}\n/>",moduleTS:"./RowOrderingGrid.js",rawTS:"import * as React from 'react';\nimport {\n  DataGridPro,\n  GridRowModel,\n  GridRowOrderChangeParams,\n} from '@mui/x-data-grid-pro';\nimport { useDemoData } from '@mui/x-data-grid-generator';\n\nfunction updateRowPosition(\n  initialIndex: number,\n  newIndex: number,\n  rows: Array<GridRowModel>,\n): Promise<any> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      const rowsClone = [...rows];\n      const row = rowsClone.splice(initialIndex, 1)[0];\n      rowsClone.splice(newIndex, 0, row);\n      resolve(rowsClone);\n    }, Math.random() * 500 + 100); // simulate network latency\n  });\n}\n\nexport default function RowOrderingGrid() {\n  const { data, loading: initialLoadingState } = useDemoData({\n    dataSet: 'Commodity',\n    rowLength: 20,\n    maxColumns: 20,\n  });\n\n  const [rows, setRows] = React.useState(data.rows);\n  const [loading, setLoading] = React.useState(initialLoadingState);\n\n  React.useEffect(() => {\n    setRows(data.rows);\n  }, [data]);\n\n  React.useEffect(() => {\n    setLoading(initialLoadingState);\n  }, [initialLoadingState]);\n\n  const handleRowOrderChange = async (params: GridRowOrderChangeParams) => {\n    setLoading(true);\n    const newRows = await updateRowPosition(\n      params.oldIndex,\n      params.targetIndex,\n      rows,\n    );\n\n    setRows(newRows);\n    setLoading(false);\n  };\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGridPro\n        loading={loading}\n        rows={rows}\n        columns={data.columns}\n        rowReordering\n        onRowOrderChange={handleRowOrderChange}\n      />\n    </div>\n  );\n}\n"}},i={"./RowOrderingGrid.js":s.Z};var d=e(24246);function c(){return(0,d.jsx)(o.Z,{demos:r,docs:t,demoComponents:i,disableAd:!0})}},26582:function(n,a,e){"use strict";e.d(a,{s:function(){return kn}});var o=e(27378),s=e(12482),t=e(37919),r=e(9563),i=e(61354),d=e(2944),c=e(34535),l=e(87199),p=e(12986),u=e(97244),g=e(87495),w=e(50507),h=e(15805),m=e(81746),f=e(12084),k=e(89621),R=e(48715),v=e(69789),y=e(91676),x=e(83864),C=e(89446),b=e(23752),M=e(94053),D=e(47786),I=e(68753),T=e(95158),_=e(29136),L=e(8679),P=e(62430),G=e(61598),O=e(18327),S=e(92666),z=e(38177),E=e(82060),j=e(31813),F=e(95088),A=e(18117),Z=e(93652),N=e(98610),B=e(6569),K=e(66931),U=e(92356),H=e(44305),$=e(27298),V=e(69863),X=e(86278),Q=e(694),q=e(86329),J=e(45933),W=e(25778),Y=e(22755),nn=e(73259),an=e(42225),en=e(94675),on=e(59694);function sn(n){var a=n.lazyLoadingFeatureFlag,e=n.rowsLoadingMode,o=n.gridDimensions;return!a||!o||e!==Y.GridFeatureModeConstant.server}var tn=e(95649),rn=e(23315),dn=e(75912),cn=e(18318),ln=e(78110),pn=function(n,a){var e,s,t=(0,u.S)(n,a);return(0,g.m)(t,a),(0,w.e)(t,a),(0,J._)(t,a),(0,H.z)(t,a),function(n,a){var e,s=(null!==(e=a.experimentalFeatures)&&void 0!==e?e:{}).lazyLoading,t=o.useCallback((function(n){if(!s||a.rowsLoadingMode!==Y.GridFeatureModeConstant.server||!a.rowCount||n.ids.length>=a.rowCount)return n;for(var e,o=(0,rn.Z)(n.ids),t=0;t<a.rowCount-n.ids.length;t+=1){var r=(e=t,"".concat("auto-generated-skeleton-row-root","-").concat(e));o.push(r)}return(0,tn.Z)((0,tn.Z)({},n),{},{ids:o})}),[a.rowCount,a.rowsLoadingMode,s]);(0,dn.Z)(n,"hydrateRows",t)}(t,a),(0,ln.$)(t),(0,Q.N)(t,a),(0,V.P)(t,a),(0,h.Q)(t),(0,m.l)(f.k,t,a),(0,m.l)(X.g,t,a),(0,m.l)($.l,t,a),(0,m.l)(k.P,t,a),(0,m.l)(cn.a,t,a),(0,m.l)(R.F,t,a),(0,m.l)(null!==(e=a.experimentalFeatures)&&void 0!==e&&e.newEditingApi?v.U:y.U,t,a),(0,m.l)(x.W,t,a),(0,m.l)(C.Q,t,a),(0,m.l)(b.Z,t,a),(0,m.l)(M.B,t,a),(0,m.l)(D.ce,t,a),(0,m.l)(B.b,t,a),(0,m.l)(K.D,t,a),(0,m.l)(I.I,t,a),(0,m.l)(T.Q,t,a),(0,m.l)(_.V,t,a),(0,m.l)(L.u4,t,a),(0,U.H)(t),(0,P.D)(t,a),(0,f.r)(t,a),(0,$.X)(t,a),(0,cn.d)(t,a),(0,k.C)(t,a),(0,R.K)(t,a),(0,G.G)(t),(0,X.k)(t,a),(0,O.n)(t),(0,L.ap)(t,a),(null!==(s=a.experimentalFeatures)&&void 0!==s&&s.newEditingApi?v.s:y.s)(t,a),(0,x.z)(t,a),(0,b.M)(t,a),(0,M.L)(t,a),(0,C.G)(t,a),(0,D.km)(t,a),(0,B.T)(t,a),(0,K.p)(t,a),(0,I.e)(t,a),(0,T.y)(t,a),(0,q.p)(t,a),(0,S.K)(t,a),(0,N.A)(t,a),function(n,a){var e,s=(0,en.y)(n,a),t=(0,nn.P)(n,Y.gridSortModelSelector),r=(0,nn.P)(n,Y.gridFilterModelSelector),i=o.useRef({firstRowToRender:0,lastRowToRender:0}),d=(null!==(e=a.experimentalFeatures)&&void 0!==e?e:{}).lazyLoading,c=o.useCallback((function(){var e=n.current.unstable_getRenderContext(),o=(0,on.sn)({firstIndex:e.firstRowIndex,lastIndex:e.lastRowIndex,minFirstIndex:0,maxLastIndex:s.rows.length,buffer:a.rowBuffer}),t=(0,W.Z)(o,2);return{firstRowToRender:t[0],lastRowToRender:t[1]}}),[n,a.rowBuffer,s.rows.length]),l=o.useCallback((function(e){var o=n.current.getRootDimensions();if(!sn({lazyLoadingFeatureFlag:d,rowsLoadingMode:a.rowsLoadingMode,gridDimensions:o})){var c={firstRowToRender:e.firstRowToRender,lastRowToRender:e.lastRowToRender,sortModel:t,filterModel:r};if(i.current.firstRowToRender!==e.firstRowToRender||i.current.lastRowToRender!==e.lastRowToRender){if(0===t.length&&0===r.items.length){var l=function(n,a){for(var e=a.firstRowIndex,o=a.lastRowIndex,s=n.slice(a.firstRowIndex,a.lastRowIndex),t=0,r=s.length-1,i=!1;!i&&e<o;)s[t].model||s[r].model||(i=!0),s[t].model&&(t+=1,e+=1),s[r].model&&(r-=1,o-=1);return i?{firstRowIndex:e,lastRowIndex:o}:void 0}(s.rows,{firstRowIndex:e.firstRowToRender,lastRowIndex:e.lastRowToRender});if(!l)return;c.firstRowToRender=l.firstRowIndex,c.lastRowToRender=l.lastRowIndex}i.current=e,n.current.publishEvent("fetchRows",c)}}}),[n,a.rowsLoadingMode,t,r,s.rows,d]),p=o.useCallback((function(e){var o=n.current.getRootDimensions();if(!sn({lazyLoadingFeatureFlag:d,rowsLoadingMode:a.rowsLoadingMode,gridDimensions:o})){n.current.unstable_requestPipeProcessorsApplication("hydrateRows");var s=c(),t={firstRowToRender:s.firstRowToRender,lastRowToRender:s.lastRowToRender,sortModel:e,filterModel:r};n.current.publishEvent("fetchRows",t)}}),[n,a.rowsLoadingMode,r,d,c]),u=o.useCallback((function(e){var o=n.current.getRootDimensions();if(!sn({lazyLoadingFeatureFlag:d,rowsLoadingMode:a.rowsLoadingMode,gridDimensions:o})){n.current.unstable_requestPipeProcessorsApplication("hydrateRows");var s=c(),r={firstRowToRender:s.firstRowToRender,lastRowToRender:s.lastRowToRender,sortModel:t,filterModel:e};n.current.publishEvent("fetchRows",r)}}),[n,a.rowsLoadingMode,t,d,c]);(0,an.zn)(n,"renderedRowsIntervalChange",l),(0,an.zn)(n,"sortModelChange",p),(0,an.zn)(n,"filterModelChange",u),(0,an.x3)(n,"fetchRows",a.onFetchRows)}(t,a),(0,_.p)(t),(0,z._)(t),(0,E.d)(t,a),(0,j.D)(t),(0,F.J)(t,a),(0,A.I)(t,a),(0,Z.s)(t),t},un=e(38041),gn=e(94239),wn=e(27016),hn=e(24246),mn="MTU5NjMxOTIwMDAwMA==",fn=o.forwardRef((function(n,a){var e=(0,un.d)(n),o=pn(e.apiRef,e);return(0,s.O)("x-data-grid-pro",mn),(0,hn.jsx)(r.d,{apiRef:o,props:e,children:(0,hn.jsx)(i.n,{className:e.className,style:e.style,sx:e.sx,ref:a,children:(0,hn.jsxs)(d.C,{children:[(0,hn.jsx)(c.f,{}),(0,hn.jsx)(l.U,{ColumnHeadersComponent:wn.r,VirtualScrollerComponent:gn.X,children:(0,hn.jsx)(t.l,{packageName:"x-data-grid-pro",releaseInfo:mn})}),(0,hn.jsx)(p.B,{})]})})})})),kn=o.memo(fn)},52753:function(n,a,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/x/react-data-grid/row-ordering",function(){return e(64759)}])}},function(n){n.O(0,[7178,6047,6767,9332,5312,3397,5699,9007,3783,8496,6352,9774,2888,179],(function(){return a=52753,n(n.s=a);var a}));var a=n.O();_N_E=a}]);