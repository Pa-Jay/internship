(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1663],{52714:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return d}});t(27378);var a=t(86767),i=t(49260),r=t(24246);const o={en:{description:"Define your rows.",location:"/docs/data/data-grid/row-definition/row-definition.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Data grid - Row definition</h1><p class="description">Define your rows.</p>\n\n<h2 id="feeding-data">Feeding data<a aria-labelledby="feeding-data" class="anchor-link-style" href="#feeding-data" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The rows can be defined with the <code>rows</code> prop, which expects an array of objects.</p>\n<aside class="MuiCallout-root MuiCallout-warning"><p>The <code>rows</code> prop should keep the same reference between two renders except when you want to apply new rows.\nOtherwise, the grid will re-apply heavy work like sorting and filtering.</p>\n\n</aside>',{demo:"RowsGrid.js",bg:"inline"},'<h2 id="row-identifier">Row identifier<a aria-labelledby="row-identifier" class="anchor-link-style" href="#row-identifier" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Each row must have a unique identifier.</p>\n<p>This identifier is used internally to identify the row in the various models\u2014for instance, the row selection model\u2014and to track the row across updates.</p>\n<p>By default, the data grid looks for a property named <code>id</code> in the data set to get that identifier.</p>\n<p>If the row&#39;s identifier is not called <code>id</code>, then you need to use the <code>getRowId</code> prop to tell the grid where it&#39;s located.</p>\n<p>The following demo shows how to use <code>getRowId</code> to grab the unique identifier from a property named <code>internalId</code>:</p>\n<div class="MuiCode-root"><pre><code class="language-tsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DataGrid</span></span> <span class="token attr-name">getRowId</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span> <span class="token operator">=></span> row<span class="token punctuation">.</span>internalId<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy">Copy <span class="MuiCode-copyKeypress"><span>(Or</span> $keyC<span>)</span></span></button></div>\n',{demo:"RowsGridWithGetRowId.js",bg:"inline",defaultCodeOpen:!1},'<p>If no such unique identifier exists in the data set, then you must create it by some other means, but this scenario should be avoided because it leads to issues with other features of the grid.</p>\n<p>Note that it is not necessary to create a column to display the unique identifier data.\nThe data grid pulls this information directly from the data set itself, not from anything that is displayed on the screen.</p>\n<aside class="MuiCallout-root MuiCallout-warning"><p>Just like the <code>rows</code> prop, the <code>getRowId</code> prop should keep the same reference between two renders.\nOtherwise, the grid will re-apply heavy work like sorting and filtering.</p>\n\n</aside><h2 id="styling-rows">Styling rows<a aria-labelledby="styling-rows" class="anchor-link-style" href="#styling-rows" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>You can check the <a href="/x/react-data-grid/style/#styling-rows">styling rows</a> section for more information.</p>\n<h2 id="api">API<a aria-labelledby="api" class="anchor-link-style" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="/x/api/data-grid/data-grid/">DataGrid</a></li>\n<li><a href="/x/api/data-grid/data-grid-pro/">DataGridPro</a></li>\n<li><a href="/x/api/data-grid/data-grid-premium/">DataGridPremium</a></li>\n</ul>\n'],toc:[{text:"Feeding data",level:2,hash:"feeding-data",children:[]},{text:"Row identifier",level:2,hash:"row-identifier",children:[]},{text:"Styling rows",level:2,hash:"styling-rows",children:[]},{text:"API",level:2,hash:"api",children:[]}],title:"Data Grid - Row definition",headers:{title:"Data Grid - Row definition",components:[]}}},s={"RowsGrid.js":{module:"./RowsGrid.js",raw:"import * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\n\nexport default function RowsGrid() {\n  return (\n    <div style={{ height: 250, width: '100%' }}>\n      <DataGrid\n        columns={[{ field: 'name' }]}\n        rows={[\n          { id: 1, name: 'React' },\n          { id: 2, name: 'MUI' },\n        ]}\n      />\n    </div>\n  );\n}\n",jsxPreview:"<DataGrid\n  columns={[{ field: 'name' }]}\n  rows={[\n    { id: 1, name: 'React' },\n    { id: 2, name: 'MUI' },\n  ]}\n/>",moduleTS:"./RowsGrid.js",rawTS:"import * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\n\nexport default function RowsGrid() {\n  return (\n    <div style={{ height: 250, width: '100%' }}>\n      <DataGrid\n        columns={[{ field: 'name' }]}\n        rows={[\n          { id: 1, name: 'React' },\n          { id: 2, name: 'MUI' },\n        ]}\n      />\n    </div>\n  );\n}\n"},"RowsGridWithGetRowId.js":{module:"./RowsGridWithGetRowId.js",raw:"import * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\n\nexport default function RowsGridWithGetRowId() {\n  return (\n    <div style={{ height: 250, width: '100%' }}>\n      <DataGrid\n        columns={[{ field: 'name' }]}\n        rows={[\n          { internalId: 1, name: 'React' },\n          { internalId: 2, name: 'MUI' },\n        ]}\n        getRowId={(row) => row.internalId}\n      />\n    </div>\n  );\n}\n",jsxPreview:"<DataGrid\n  columns={[{ field: 'name' }]}\n  rows={[\n    { internalId: 1, name: 'React' },\n    { internalId: 2, name: 'MUI' },\n  ]}\n  getRowId={(row) => row.internalId}\n/>",moduleTS:"./RowsGridWithGetRowId.js",rawTS:"import * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\n\nexport default function RowsGridWithGetRowId() {\n  return (\n    <div style={{ height: 250, width: '100%' }}>\n      <DataGrid\n        columns={[{ field: 'name' }]}\n        rows={[\n          { internalId: 1, name: 'React' },\n          { internalId: 2, name: 'MUI' },\n        ]}\n        getRowId={(row) => row.internalId}\n      />\n    </div>\n  );\n}\n"}},l={"./RowsGrid.js":function(){return(0,r.jsx)("div",{style:{height:250,width:"100%"},children:(0,r.jsx)(i._,{columns:[{field:"name"}],rows:[{id:1,name:"React"},{id:2,name:"MUI"}]})})},"./RowsGridWithGetRowId.js":function(){return(0,r.jsx)("div",{style:{height:250,width:"100%"},children:(0,r.jsx)(i._,{columns:[{field:"name"}],rows:[{internalId:1,name:"React"},{internalId:2,name:"MUI"}],getRowId:function(e){return e.internalId}})})}};function d(){return(0,r.jsx)(a.Z,{demos:s,docs:o,demoComponents:l})}},49260:function(e,n,t){"use strict";t.d(n,{_:function(){return we}});var a=t(27378),i=t(61354),r=t(2944),o=t(34535),s=t(87199),l=t(12986),d=t(9563),c=t(97244),u=t(81746),p=t(31813),h=t(29136),f=t(89621),w=t(47786),m=t(38177),g=t(82060),R=t(94053),v=t(83864),y=t(62430),x=t(68753),k=t(23752),I=t(91676),G=t(69789),b=t(48715),j=t(15805),D=t(61598),C=t(12084),Z=t(50507),_=t(89446),M=t(92666),P=t(18117),S=t(95088),A=t(95158),N=t(93652),T=t(18327),U=t(8679),E=t(87495),z=t(62905),H=t(95649),W=t(81936),O=t(77863),B=t(18913),V=t(80262),F=t(59694),q=t(24246),X=["className","disableVirtualization"],K=a.forwardRef((function(e,n){var t=e.className,a=e.disableVirtualization,i=(0,W.Z)(e,X),r=(0,F.cD)({ref:n,disableVirtualization:a}),o=r.getRootProps,s=r.getContentProps,l=r.getRenderZoneProps,d=r.getRows;return(0,q.jsx)(O.O,(0,H.Z)((0,H.Z)({className:t},o(i)),{},{children:(0,q.jsx)(B._,(0,H.Z)((0,H.Z)({},s()),{},{children:(0,q.jsx)(V.H,(0,H.Z)((0,H.Z)({},l()),{},{children:d()}))}))}))})),Q=t(21526),J=t(25778),L=t(57379),Y=t(38944),$=t(82267),ee=t(67018),ne=t(42225),te=t(84933),ae=t(28457),ie=t(96515),re=t(76049),oe=t(73259),se=(0,ee.ZP)("div",{name:"MuiDataGrid",slot:"ScrollArea",overridesResolver:function(e,n){return[(0,L.Z)({},"&.".concat(ae._["scrollArea--left"]),n["scrollArea--left"]),(0,L.Z)({},"&.".concat(ae._["scrollArea--right"]),n["scrollArea--right"]),n.scrollArea]}})((function(){var e;return e={position:"absolute",top:0,zIndex:101,width:20,bottom:0},(0,L.Z)(e,"&.".concat(ae._["scrollArea--left"]),{left:0}),(0,L.Z)(e,"&.".concat(ae._["scrollArea--right"]),{right:0}),e}));function le(e){var n=e.scrollDirection,t=a.useRef(null),i=(0,te.l)(),r=a.useRef(),o=a.useState(!1),s=(0,J.Z)(o,2),l=s[0],d=s[1],c=(0,oe.P)(i,re.wr),u=a.useRef({left:0,top:0}),p=(0,ie.B)(),h=function(e){var n=e.scrollDirection,t=e.classes,a={root:["scrollArea","scrollArea--".concat(n)]};return(0,$.Z)(a,ae.d,t)}((0,H.Z)((0,H.Z)({},e),{},{classes:p.classes})),f=a.useCallback((function(e){u.current=e}),[]),w=a.useCallback((function(e){var a;if("left"===n)a=e.clientX-t.current.getBoundingClientRect().right;else{if("right"!==n)throw new Error("MUI: Wrong drag direction");a=Math.max(1,e.clientX-t.current.getBoundingClientRect().left)}a=1.5*(a-1)+1,clearTimeout(r.current),r.current=setTimeout((function(){i.current.scroll({left:u.current.left+a,top:u.current.top})}))}),[n,i]);a.useEffect((function(){return function(){clearTimeout(r.current)}}),[]);var m=a.useCallback((function(){d((function(e){return!e}))}),[]);return(0,ne.zn)(i,"rowsScroll",f),(0,ne.zn)(i,"columnHeaderDragStart",m),(0,ne.zn)(i,"columnHeaderDragEnd",m),l?(0,q.jsx)(se,{ref:t,className:(0,Y.Z)(h.root),onDragOver:w,style:{height:c}}):null}var de=a.memo(le),ce=t(10364),ue=t(93490),pe=["innerRef","className"],he=a.forwardRef((function(e,n){var t=e.innerRef,a=(e.className,(0,W.Z)(e,pe)),i=(0,Q.L)({innerRef:t}),r=i.isDragging,o=i.getRootProps,s=i.getInnerProps,l=i.getColumnHeaders,d=i.getColumnGroupHeaders;return(0,q.jsxs)(ce.n,(0,H.Z)((0,H.Z)({ref:n},o(a)),{},{children:[(0,q.jsx)(de,{scrollDirection:"left"}),(0,q.jsxs)(ue.F,(0,H.Z)((0,H.Z)({isDragging:r},s()),{},{children:[d(),l()]})),(0,q.jsx)(de,{scrollDirection:"right"})]}))})),fe=a.forwardRef((function(e,n){var t=(0,z.pu)(e),a=function(e){var n,t,a=(0,c.S)(void 0,e);return(0,E.m)(a,e),(0,Z.e)(a,e),(0,j.Q)(a),(0,u.l)(C.k,a,e),(0,u.l)(f.P,a,e),(0,u.l)(U.u4,a,e),(0,u.l)(b.F,a,e),(0,u.l)(null!==(n=e.experimentalFeatures)&&void 0!==n&&n.newEditingApi?G.U:I.U,a,e),(0,u.l)(v.W,a,e),(0,u.l)(_.Q,a,e),(0,u.l)(k.Z,a,e),(0,u.l)(R.B,a,e),(0,u.l)(w.ce,a,e),(0,u.l)(x.I,a,e),(0,u.l)(A.Q,a,e),(0,u.l)(h.V,a,e),(0,y.D)(a,e),(0,C.r)(a,e),(0,f.C)(a,e),(0,b.K)(a,e),(0,D.G)(a),(0,T.n)(a),(0,U.ap)(a,e),(null!==(t=e.experimentalFeatures)&&void 0!==t&&t.newEditingApi?G.s:I.s)(a,e),(0,v.z)(a,e),(0,k.M)(a,e),(0,R.L)(a,e),(0,_.G)(a,e),(0,w.km)(a,e),(0,x.e)(a,e),(0,A.y)(a,e),(0,M.K)(a,e),(0,h.p)(a),(0,m._)(a),(0,g.d)(a,e),(0,p.D)(a),(0,S.J)(a,e),(0,P.I)(a,e),(0,N.s)(a),a}(t);return(0,q.jsx)(d.d,{apiRef:a,props:t,children:(0,q.jsx)(i.n,{className:t.className,style:t.style,sx:t.sx,ref:n,children:(0,q.jsxs)(r.C,{children:[(0,q.jsx)(o.f,{}),(0,q.jsx)(s.U,{ColumnHeadersComponent:he,VirtualScrollerComponent:K}),(0,q.jsx)(l.B,{})]})})})})),we=a.memo(fe)},21819:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/x/react-data-grid/row-definition",function(){return t(52714)}])}},function(e){e.O(0,[6047,6767,9332,9007,9774,2888,179],(function(){return n=21819,e(e.s=n);var n}));var n=e.O();_N_E=n}]);